{
  "version": 3,
  "sources": ["../../src/renderer/index.ts"],
  "sourcesContent": ["const MINUTE = 60_000;\n\ntype SessionStatus = 'clocked_out' | 'working' | 'break' | 'lunch';\ntype RequestType = 'make_up' | 'time_off' | 'edit';\ntype RequestStatus = 'pending' | 'approved' | 'denied';\ntype TimesheetView = 'weekly' | 'pay_period' | 'monthly';\n\ntype ActivityCategory = 'session' | 'presence' | 'break' | 'lunch' | 'request';\n\ninterface TimesheetDay {\n  date: string;\n  label: string;\n  activeHours: number;\n  idleHours: number;\n  breaks: number;\n  lunches: number;\n  presenceMisses: number;\n  note?: string;\n}\n\ninterface TimesheetTotals {\n  activeHours: number;\n  idleHours: number;\n  breaks: number;\n  lunches: number;\n  presenceMisses: number;\n}\n\ninterface TimesheetPeriod {\n  label: string;\n  range: string;\n  days: TimesheetDay[];\n  totals: TimesheetTotals;\n}\n\ninterface RequestItem {\n  id: string;\n  type: RequestType;\n  status: RequestStatus;\n  startDate: string;\n  endDate?: string | null;\n  hours: number;\n  reason: string;\n  submittedAt: string;\n}\n\ninterface ScheduleTemplate {\n  label: string;\n  start: string;\n  end: string;\n}\n\ninterface ScheduleEntry {\n  id: string;\n  date: string;\n  label: string;\n  start: string;\n  end: string;\n  location: string;\n  status: 'upcoming' | 'in_progress' | 'completed';\n  note?: string;\n}\n\ninterface ActivityItem {\n  id: string;\n  timestamp: string;\n  message: string;\n  category: ActivityCategory;\n}\n\ninterface TodaySnapshot {\n  date: string;\n  label: string;\n  activeMinutes: number;\n  idleMinutes: number;\n  breakMinutes: number;\n  lunchMinutes: number;\n  breaksCount: number;\n  lunchCount: number;\n  presenceMisses: number;\n}\n\ninterface SessionState {\n  status: SessionStatus;\n  startedAt: Date | null;\n  breakStartedAt: Date | null;\n  lunchStartedAt: Date | null;\n  lastPresenceCheck: Date | null;\n  nextPresenceCheck: Date;\n  lastClockedInAt: Date | null;\n  lastClockedOutAt: Date | null;\n}\n\ninterface AttendanceState {\n  user: {\n    name: string;\n    role: string;\n    location: string;\n  };\n  session: SessionState;\n  today: TodaySnapshot;\n  timesheet: {\n    view: TimesheetView;\n    periods: Record<TimesheetView, TimesheetPeriod>;\n  };\n  requests: RequestItem[];\n  schedule: {\n    defaults: ScheduleTemplate[];\n    upcoming: ScheduleEntry[];\n  };\n  activity: ActivityItem[];\n  makeUpCap: {\n    used: number;\n    cap: number;\n  };\n}\n\ninterface OverviewTimesheetDay {\n  date: string;\n  label: string;\n  activeHours: number;\n  idleHours: number;\n  breaks: number;\n  lunches: number;\n  presenceMisses: number;\n}\n\ninterface OverviewTimesheetPeriod {\n  label: string;\n  range: string;\n  days: OverviewTimesheetDay[];\n  totals: {\n    activeHours: number;\n    idleHours: number;\n    breaks: number;\n    lunches: number;\n    presenceMisses: number;\n  };\n}\n\ninterface OverviewRequestItem {\n  id: string;\n  type: RequestType;\n  status: RequestStatus;\n  startDate: string;\n  endDate?: string | null;\n  hours: number;\n  reason: string;\n  submittedAt: string;\n}\n\ninterface OverviewResponse {\n  user: { id: number; email: string; name: string; role: string; location: string };\n  session: {\n    id: string | null;\n    status: SessionStatus;\n    startedAt: string | null;\n    breakStartedAt: string | null;\n    lunchStartedAt: string | null;\n    lastPresenceCheck: string | null;\n    nextPresenceCheck: string | null;\n    lastClockedInAt: string | null;\n    lastClockedOutAt: string | null;\n  };\n  today: TodaySnapshot;\n  timesheet: {\n    view: TimesheetView;\n    periods: Record<TimesheetView, OverviewTimesheetPeriod>;\n  };\n  requests: OverviewRequestItem[];\n  schedule: {\n    defaults: ScheduleTemplate[];\n    upcoming: ScheduleEntry[];\n  };\n  activity: ActivityItem[];\n  makeUpCap: { used: number; cap: number };\n  meta?: { generatedAt: string; referenceDate: string };\n}\n\nconst addDays = (date: Date, amount: number) => {\n  const copy = new Date(date.getTime());\n  copy.setDate(copy.getDate() + amount);\n  return copy;\n};\n\nconst addMinutes = (date: Date, minutes: number) => new Date(date.getTime() + minutes * MINUTE);\n\nconst startOfWeek = (date: Date) => {\n  const copy = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  const day = copy.getDay();\n  const mondayIndex = (day + 6) % 7;\n  copy.setDate(copy.getDate() - mondayIndex);\n  return copy;\n};\n\nconst isoDate = (date: Date) => {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\nconst parseIsoDate = (value: string) => new Date(`${value}T00:00:00`);\n\nconst formatDayLabel = (date: Date) =>\n  new Intl.DateTimeFormat(undefined, { weekday: 'short', month: 'short', day: 'numeric' }).format(date);\n\nconst formatDateLong = (date: Date) =>\n  new Intl.DateTimeFormat(undefined, { month: 'long', day: 'numeric', year: 'numeric' }).format(date);\n\nconst formatMonthLabel = (date: Date) =>\n  new Intl.DateTimeFormat(undefined, { month: 'long', year: 'numeric' }).format(date);\n\nconst formatRelative = (date: Date | null) => {\n  if (!date) {\n    return '\u2014';\n  }\n  const diffMs = Date.now() - date.getTime();\n  const diffMinutes = Math.round(diffMs / MINUTE);\n  if (diffMinutes < 1) {\n    return 'just now';\n  }\n  if (diffMinutes < 60) {\n    return `${diffMinutes} min ago`;\n  }\n  const diffHours = Math.round(diffMinutes / 60);\n  if (diffHours < 24) {\n    return `${diffHours} hr${diffHours === 1 ? '' : 's'} ago`;\n  }\n  return formatDateLong(date);\n};\n\nconst formatCountdown = (target: Date | null) => {\n  if (!target) {\n    return '\u2014';\n  }\n  const diffMs = target.getTime() - Date.now();\n  if (diffMs <= 0) {\n    return 'due now';\n  }\n  const minutes = Math.floor(diffMs / MINUTE);\n  if (minutes >= 60) {\n    const hours = Math.floor(minutes / 60);\n    const remainder = minutes % 60;\n    if (remainder === 0) {\n      return `${hours} hr${hours === 1 ? '' : 's'}`;\n    }\n    return `${hours} hr ${remainder} min`;\n  }\n  return `${minutes} min`;\n};\n\nconst formatDurationMinutes = (minutes: number) => {\n  if (minutes <= 0) {\n    return '0m';\n  }\n  const hours = Math.floor(minutes / 60);\n  const remainder = Math.round(minutes % 60);\n  if (hours === 0) {\n    return `${remainder}m`;\n  }\n  if (remainder === 0) {\n    return `${hours}h`;\n  }\n  return `${hours}h ${remainder}m`;\n};\n\nconst formatHours = (hours: number) => {\n  const rounded = Math.round(hours * 100) / 100;\n  return Number.isInteger(rounded) ? `${rounded}` : rounded.toFixed(2);\n};\n\nconst minutesBetween = (start: Date | null, end: Date = new Date()) => {\n  if (!start) {\n    return 0;\n  }\n  return Math.max(0, Math.round((end.getTime() - start.getTime()) / MINUTE));\n};\n\nconst escapeHtml = (value: string) =>\n  value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n\nconst createDay = (\n  date: Date,\n  data: { active: number; idle: number; breaks: number; lunches: number; presence: number; note?: string }\n): TimesheetDay => ({\n  date: isoDate(date),\n  label: formatDayLabel(date),\n  activeHours: data.active,\n  idleHours: data.idle,\n  breaks: data.breaks,\n  lunches: data.lunches,\n  presenceMisses: data.presence,\n  note: data.note\n});\n\ninterface AppContext {\n  baseUrl: string | null;\n  deviceId: string | null;\n  platform: string;\n  email: string | null;\n  sessionId: string | null;\n  accessToken: string | null;\n  refreshToken: string | null;\n  tokenExpiresAt: Date | null;\n}\n\nlet appContext: AppContext = {\n  baseUrl: null,\n  deviceId: null,\n  platform: navigator.userAgent.includes('Mac') ? 'darwin' : navigator.userAgent,\n  email: null,\n  sessionId: null,\n  accessToken: null,\n  refreshToken: null,\n  tokenExpiresAt: null\n};\n\nlet activePromptId: string | null = null;\nconst presenceUnsubscribers: Array<() => void> = [];\n\ntype AuthTokens = {\n  accessToken: string;\n  accessTokenExpiresAt?: string;\n  refreshToken: string;\n  refreshTokenExpiresAt?: string;\n  tokenType?: string;\n  scope?: string;\n};\n\nconst clearTokens = () => {\n  appContext.accessToken = null;\n  appContext.refreshToken = null;\n  appContext.tokenExpiresAt = null;\n};\n\nconst applyTokens = (tokens: AuthTokens) => {\n  appContext.accessToken = tokens.accessToken;\n  appContext.refreshToken = tokens.refreshToken;\n  appContext.tokenExpiresAt = tokens.accessTokenExpiresAt\n    ? new Date(tokens.accessTokenExpiresAt)\n    : null;\n};\n\nconst hasValidToken = () => {\n  if (!appContext.accessToken) {\n    return false;\n  }\n  if (!appContext.tokenExpiresAt) {\n    return true;\n  }\n  const expiresInMs = appContext.tokenExpiresAt.getTime() - Date.now();\n  return expiresInMs > 60_000; // keep a one-minute buffer\n};\n\nlet authInFlight: Promise<boolean> | null = null;\n\nconst authenticate = async (): Promise<boolean> => {\n  if (hasValidToken()) {\n    return true;\n  }\n\n  if (authInFlight) {\n    return authInFlight;\n  }\n\n  if (!appContext.baseUrl || !appContext.deviceId) {\n    showToast('Configure the server connection before syncing with the cloud.', 'warning');\n    return false;\n  }\n\n  if (!appContext.email) {\n    showToast('Add your work email in Settings to sync with the server.', 'warning');\n    return false;\n  }\n\n  authInFlight = (async () => {\n    try {\n      const tokens = await postJson<AuthTokens>(\n        '/api/sessions/start',\n        {\n          flow: 'email_only',\n          email: appContext.email,\n          deviceId: appContext.deviceId\n        },\n        { requiresAuth: false }\n      );\n      applyTokens(tokens);\n      return true;\n    } catch (error) {\n      console.error('Authentication failed', error);\n      showToast('Unable to authenticate with the attendance server.', 'danger');\n      clearTokens();\n      return false;\n    } finally {\n      authInFlight = null;\n    }\n  })();\n\n  return authInFlight;\n};\n\nconst registerPresenceListeners = () => {\n  presenceUnsubscribers.splice(0).forEach((unsub) => {\n    try {\n      unsub();\n    } catch (error) {\n      console.warn('Failed to remove presence listener', error);\n    }\n  });\n\n  if (window.attendance?.onPresenceWindowConfirm) {\n    const unsubscribe = window.attendance.onPresenceWindowConfirm(async (promptId) => {\n      activePromptId = promptId;\n      const confirmed = await confirmPresencePrompt(promptId);\n      if (confirmed) {\n        pushActivity('Presence confirmed.', 'presence');\n        showToast('Presence confirmed.', 'success');\n        logAction('presence_confirm');\n        await hydrateFromServer();\n      }\n    });\n    presenceUnsubscribers.push(unsubscribe);\n  }\n\n  if (window.attendance?.onPresenceWindowDismiss) {\n    const unsubscribe = window.attendance.onPresenceWindowDismiss((promptId) => {\n      if (!activePromptId || activePromptId === promptId) {\n        activePromptId = null;\n      }\n      pushActivity('Presence prompt dismissed.', 'presence');\n      showToast('Presence prompt dismissed.', 'info');\n    });\n    presenceUnsubscribers.push(unsubscribe);\n  }\n};\n\nconst recomputeTotals = (days: TimesheetDay[]): TimesheetTotals =>\n  days.reduce(\n    (totals, day) => {\n      totals.activeHours += day.activeHours;\n      totals.idleHours += day.idleHours;\n      totals.breaks += day.breaks;\n      totals.lunches += day.lunches;\n      totals.presenceMisses += day.presenceMisses;\n      return totals;\n    },\n    { activeHours: 0, idleHours: 0, breaks: 0, lunches: 0, presenceMisses: 0 }\n  );\n\nconst greeting = (date: Date) => {\n  const hour = date.getHours();\n  if (hour < 12) {\n    return 'Good morning';\n  }\n  if (hour < 17) {\n    return 'Good afternoon';\n  }\n  return 'Good evening';\n};\n\nconst requestLabel = (type: RequestType) => {\n  switch (type) {\n    case 'make_up':\n      return 'Make-up hours';\n    case 'time_off':\n      return 'Time off';\n    case 'edit':\n      return 'Timesheet edit';\n    default:\n      return type.replace('_', ' ');\n  }\n};\n\nconst requestStatusClass = (status: RequestStatus) => {\n  if (status === 'pending') {\n    return 'pill pill--pending';\n  }\n  if (status === 'approved') {\n    return 'pill pill--approved';\n  }\n  return 'pill pill--denied';\n};\n\nconst categoryIcon = (category: ActivityCategory) => {\n  switch (category) {\n    case 'session':\n      return '\uD83D\uDD51';\n    case 'presence':\n      return '\uD83D\uDC4B';\n    case 'break':\n      return '\u2615';\n    case 'lunch':\n      return '\uD83C\uDF71';\n    case 'request':\n      return '\uD83D\uDCDD';\n    default:\n      return '\u2022';\n  }\n};\n\nconst logAction = (action: string) => {\n  try {\n    window.attendance?.logAction(action);\n  } catch (error) {\n    console.warn('logAction failed', error);\n  }\n};\n\nconst requireServerContext = () => {\n  if (!appContext.baseUrl) {\n    throw new Error('Server URL is not configured. Update Settings with a server address.');\n  }\n  if (!appContext.deviceId) {\n    throw new Error('Device identity missing. Relaunch the application.');\n  }\n};\n\nconst postJson = async <T = unknown>(\n  path: string,\n  body: Record<string, unknown>,\n  options: {\n    method?: 'POST' | 'PUT' | 'PATCH';\n    expectJson?: boolean;\n    requiresAuth?: boolean;\n    retryOnAuthFailure?: boolean;\n  } = {}\n): Promise<T> => {\n  requireServerContext();\n  const {\n    method = 'POST',\n    expectJson = true,\n    requiresAuth = true,\n    retryOnAuthFailure = true\n  } = options;\n\n  if (requiresAuth) {\n    const authed = await authenticate();\n    if (!authed) {\n      throw new Error('Authentication required');\n    }\n  }\n\n  const url = new URL(path, appContext.baseUrl!);\n  const headers: Record<string, string> = {\n    'Content-Type': 'application/json'\n  };\n  if (requiresAuth && appContext.accessToken) {\n    headers.Authorization = `Bearer ${appContext.accessToken}`;\n  }\n\n  let response: Response;\n  try {\n    response = await fetch(url.toString(), {\n      method,\n      headers,\n      body: JSON.stringify(body)\n    });\n  } catch (error) {\n    throw new Error(`Network request failed: ${(error as Error).message}`);\n  }\n\n  if (response.status === 401 && requiresAuth) {\n    clearTokens();\n    if (retryOnAuthFailure && (await authenticate())) {\n      return postJson(path, body, { method, expectJson, requiresAuth, retryOnAuthFailure: false });\n    }\n    throw new Error('Authentication failed');\n  }\n\n  if (!response.ok) {\n    const text = await response.text().catch(() => '');\n    const snippet = text.slice(0, 200);\n    throw new Error(`Request failed (${response.status}): ${snippet || response.statusText}`);\n  }\n\n  if (!expectJson || response.status === 204) {\n    return undefined as unknown as T;\n  }\n\n  const text = await response.text();\n  if (!text) {\n    return undefined as unknown as T;\n  }\n  return JSON.parse(text) as T;\n};\n\nconst startSessionOnServer = async (): Promise<boolean> => {\n  if (!appContext.baseUrl) {\n    await hydrateFromServer().catch(() => undefined);\n  }\n  requireServerContext();\n  if (!appContext.email) {\n    showToast('Add a work email in Settings before clocking in.', 'warning');\n    return false;\n  }\n\n  try {\n    const result = await postJson<{ sessionId?: string; id?: string }>(\n      '/api/sessions/start',\n      {\n        email: appContext.email,\n        deviceId: appContext.deviceId,\n        platform: appContext.platform\n      },\n      { requiresAuth: false }\n    );\n\n    const sessionId = result?.sessionId ?? result?.id ?? null;\n    if (!sessionId) {\n      throw new Error('Missing session identifier in response.');\n    }\n    appContext.sessionId = sessionId;\n    await authenticate();\n    return true;\n  } catch (error) {\n    console.error('Failed to start session', error);\n    showToast('Unable to start session on the server.', 'danger');\n    return false;\n  }\n};\n\nconst ensureActiveSession = async (): Promise<string | null> => {\n  if (appContext.sessionId) {\n    return appContext.sessionId;\n  }\n  const started = await startSessionOnServer();\n  return started ? appContext.sessionId : null;\n};\n\nconst endSessionOnServer = async () => {\n  if (!appContext.sessionId) {\n    return true;\n  }\n\n  try {\n    await postJson('/api/sessions/end', { sessionId: appContext.sessionId }, { expectJson: true });\n    appContext.sessionId = null;\n    return true;\n  } catch (error) {\n    console.error('Failed to end session', error);\n    showToast('Unable to end session on the server.', 'danger');\n    return false;\n  }\n};\n\nconst sendSimpleEvent = async (path: string) => {\n  const sessionId = await ensureActiveSession();\n  if (!sessionId) {\n    return false;\n  }\n\n  try {\n    await postJson(\n      `/api/events/${path}`,\n      {\n        sessionId,\n        timestamp: new Date().toISOString()\n      },\n      { expectJson: false }\n    );\n    return true;\n  } catch (error) {\n    console.error(`Failed to send event ${path}`, error);\n    showToast('Unable to communicate with the attendance server.', 'danger');\n    return false;\n  }\n};\n\nconst confirmPresencePrompt = async (promptId: string) => {\n  const sessionId = await ensureActiveSession();\n  if (!sessionId) {\n    return false;\n  }\n\n  try {\n    await postJson(\n      '/api/events/presence/confirm',\n      {\n        sessionId,\n        promptId,\n        timestamp: new Date().toISOString()\n      },\n      { expectJson: false }\n    );\n    return true;\n  } catch (error) {\n    console.error('Failed to confirm presence prompt', error);\n    showToast('Unable to confirm presence with the server.', 'danger');\n    return false;\n  }\n};\n\nconst showToast = (message: string, variant: 'info' | 'success' | 'warning' | 'danger' = 'success') => {\n  const toast = document.getElementById('toast');\n  if (!toast) {\n    return;\n  }\n  toast.textContent = message;\n  if (variant === 'info') {\n    toast.removeAttribute('data-variant');\n  } else {\n    toast.dataset.variant = variant;\n  }\n  toast.setAttribute('data-visible', 'true');\n  window.setTimeout(() => toast.removeAttribute('data-visible'), 2_500);\n};\n\nconst now = new Date();\nconst weekStart = startOfWeek(now);\n\nconst weeklyTemplate = [\n  { active: 7.8, idle: 0.4, breaks: 2, lunches: 1, presence: 0, note: 'Floor reset complete.' },\n  { active: 7.6, idle: 0.5, breaks: 2, lunches: 1, presence: 0 },\n  { active: 7.9, idle: 0.6, breaks: 3, lunches: 1, presence: 1, note: 'Missed presence check at 2:10\u202Fpm.' },\n  { active: 8.2, idle: 0.3, breaks: 2, lunches: 1, presence: 0 },\n  { active: 7.4, idle: 0.5, breaks: 2, lunches: 1, presence: 0 },\n  { active: 5.0, idle: 0.7, breaks: 2, lunches: 1, presence: 0, note: 'Partial shift for inventory count.' },\n  { active: 0, idle: 0, breaks: 0, lunches: 0, presence: 0, note: 'Scheduled day off.' }\n] as const;\n\nconst weeklyDays = weeklyTemplate.map((data, index) => createDay(addDays(weekStart, index), data));\n\nconst previousWeekTemplate = [\n  { active: 7.5, idle: 0.6, breaks: 2, lunches: 1, presence: 0 },\n  { active: 7.9, idle: 0.4, breaks: 2, lunches: 1, presence: 0 },\n  { active: 8.1, idle: 0.5, breaks: 3, lunches: 1, presence: 0 },\n  { active: 7.7, idle: 0.6, breaks: 2, lunches: 1, presence: 0 },\n  { active: 7.3, idle: 0.6, breaks: 2, lunches: 1, presence: 0 },\n  { active: 4.5, idle: 0.5, breaks: 1, lunches: 1, presence: 0 },\n  { active: 0, idle: 0, breaks: 0, lunches: 0, presence: 0 }\n] as const;\n\nconst previousWeekStart = addDays(weekStart, -7);\nconst previousWeekDays = previousWeekTemplate.map((data, index) => createDay(addDays(previousWeekStart, index), data));\n\nconst earlyWeekTemplate = [\n  { active: 7.2, idle: 0.5, breaks: 2, lunches: 1, presence: 0 },\n  { active: 7.8, idle: 0.4, breaks: 2, lunches: 1, presence: 0 },\n  { active: 7.6, idle: 0.5, breaks: 2, lunches: 1, presence: 0 },\n  { active: 8.0, idle: 0.4, breaks: 2, lunches: 1, presence: 0 },\n  { active: 7.1, idle: 0.6, breaks: 2, lunches: 1, presence: 0 },\n  { active: 0, idle: 0, breaks: 0, lunches: 0, presence: 0 },\n  { active: 0, idle: 0, breaks: 0, lunches: 0, presence: 0 }\n] as const;\n\nconst earlyWeekStart = addDays(previousWeekStart, -7);\nconst earlyWeekDays = earlyWeekTemplate.map((data, index) => createDay(addDays(earlyWeekStart, index), data));\n\nconst payPeriodDays = [...previousWeekDays, ...weeklyDays];\nconst monthlyDays = [...earlyWeekDays, ...previousWeekDays, ...weeklyDays];\n\nconst weeklyPeriod: TimesheetPeriod = {\n  label: `${formatDayLabel(parseIsoDate(weeklyDays[0].date))} \u2013 ${formatDayLabel(\n    parseIsoDate(weeklyDays[weeklyDays.length - 1].date)\n  )}`,\n  range: `${formatDateLong(parseIsoDate(weeklyDays[0].date))} \u2013 ${formatDateLong(\n    parseIsoDate(weeklyDays[weeklyDays.length - 1].date)\n  )}`,\n  days: weeklyDays,\n  totals: recomputeTotals(weeklyDays)\n};\n\nconst payPeriod: TimesheetPeriod = {\n  label: `Pay Period ${formatDateLong(parseIsoDate(payPeriodDays[0].date))} \u2013 ${formatDateLong(\n    parseIsoDate(payPeriodDays[payPeriodDays.length - 1].date)\n  )}`,\n  range: `${formatDayLabel(parseIsoDate(payPeriodDays[0].date))} \u2013 ${formatDayLabel(\n    parseIsoDate(payPeriodDays[payPeriodDays.length - 1].date)\n  )}`,\n  days: payPeriodDays,\n  totals: recomputeTotals(payPeriodDays)\n};\n\nconst monthStart = parseIsoDate(monthlyDays[0].date);\nconst monthEnd = parseIsoDate(monthlyDays[monthlyDays.length - 1].date);\n\nconst monthlyPeriod: TimesheetPeriod = {\n  label: `${formatMonthLabel(monthStart)} \u2022 ${formatDayLabel(monthStart)} \u2013 ${formatDayLabel(monthEnd)}`,\n  range: `${formatDateLong(monthStart)} \u2013 ${formatDateLong(monthEnd)}`,\n  days: monthlyDays,\n  totals: recomputeTotals(monthlyDays)\n};\n\nconst todayIso = isoDate(now);\nconst todayEntry = weeklyDays.find((day) => day.date === todayIso) ?? weeklyDays[0];\n\nconst todaySnapshot: TodaySnapshot = {\n  date: todayEntry.date,\n  label: todayEntry.label,\n  activeMinutes: Math.round(todayEntry.activeHours * 60),\n  idleMinutes: Math.round(todayEntry.idleHours * 60),\n  breakMinutes: todayEntry.breaks * 10,\n  lunchMinutes: todayEntry.lunches > 0 ? todayEntry.lunches * 45 : 0,\n  breaksCount: todayEntry.breaks,\n  lunchCount: todayEntry.lunches,\n  presenceMisses: todayEntry.presenceMisses\n};\n\nlet state: AttendanceState = {\n  user: {\n    name: 'Chloe Sanchez',\n    role: 'Retail Associate',\n    location: 'San Francisco Retail Floor'\n  },\n  session: {\n    status: 'clocked_out',\n    startedAt: null,\n    breakStartedAt: null,\n    lunchStartedAt: null,\n    lastPresenceCheck: null,\n    nextPresenceCheck: addMinutes(now, 45),\n    lastClockedInAt: null,\n    lastClockedOutAt: addMinutes(now, -30)\n  },\n  today: todaySnapshot,\n  timesheet: {\n    view: 'weekly',\n    periods: {\n      weekly: weeklyPeriod,\n      pay_period: payPeriod,\n      monthly: monthlyPeriod\n    }\n  },\n  requests: [\n    {\n      id: 'req-pto-001',\n      type: 'time_off',\n      status: 'approved',\n      startDate: addDays(now, -3).toISOString(),\n      endDate: addDays(now, -2).toISOString(),\n      hours: 16,\n      reason: 'Family visit in Sacramento.',\n      submittedAt: addDays(now, -12).toISOString()\n    },\n    {\n      id: 'req-make-up-002',\n      type: 'make_up',\n      status: 'pending',\n      startDate: addDays(now, 2).toISOString(),\n      endDate: addDays(now, 2).toISOString(),\n      hours: 3,\n      reason: 'Cover for inventory audit.',\n      submittedAt: addDays(now, -1).toISOString()\n    },\n    {\n      id: 'req-edit-003',\n      type: 'edit',\n      status: 'denied',\n      startDate: addDays(now, -7).toISOString(),\n      endDate: addDays(now, -7).toISOString(),\n      hours: 0,\n      reason: 'Adjustment already applied by manager.',\n      submittedAt: addDays(now, -5).toISOString()\n    }\n  ],\n  schedule: {\n    defaults: [\n      { label: 'Mon \u2013 Fri', start: '09:00', end: '17:30' },\n      { label: 'Sat', start: '10:00', end: '18:00' }\n    ],\n    upcoming: [\n      {\n        id: 'shift-today',\n        date: todayIso,\n        label: 'Today',\n        start: '09:00',\n        end: '17:30',\n        location: 'Retail Floor',\n        status: 'in_progress',\n        note: 'Coverage with Marcus during lunch rush.'\n      },\n      {\n        id: 'shift-tomorrow',\n        date: isoDate(addDays(now, 1)),\n        label: 'Tomorrow',\n        start: '11:00',\n        end: '19:30',\n        location: 'Outlet \u2013 Union Square',\n        status: 'upcoming',\n        note: 'Swap approved for evening coverage.'\n      },\n      {\n        id: 'shift-weekend',\n        date: isoDate(addDays(now, 3)),\n        label: formatDayLabel(addDays(now, 3)),\n        start: '10:00',\n        end: '16:00',\n        location: 'Pop-up Kiosk',\n        status: 'upcoming'\n      },\n      {\n        id: 'shift-prev',\n        date: isoDate(addDays(now, -1)),\n        label: 'Yesterday',\n        start: '09:30',\n        end: '17:00',\n        location: 'Retail Floor',\n        status: 'completed'\n      }\n    ]\n  },\n  activity: [\n    {\n      id: 'activity-1',\n      timestamp: addMinutes(now, -12).toISOString(),\n      message: 'Presence check confirmed from desktop app.',\n      category: 'presence'\n    },\n    {\n      id: 'activity-2',\n      timestamp: addMinutes(now, -38).toISOString(),\n      message: 'Lunch ended \u2013 42 minutes.',\n      category: 'lunch'\n    },\n    {\n      id: 'activity-3',\n      timestamp: addMinutes(now, -96).toISOString(),\n      message: 'Break recorded \u2013 10 minutes.',\n      category: 'break'\n    },\n    {\n      id: 'activity-4',\n      timestamp: addMinutes(now, -130).toISOString(),\n      message: 'Clocked in from store kiosk.',\n      category: 'session'\n    },\n    {\n      id: 'activity-5',\n      timestamp: addMinutes(now, -280).toISOString(),\n      message: 'Approved time-off request for Oct 3 \u2013 Oct 4.',\n      category: 'request'\n    }\n  ],\n  makeUpCap: {\n    used: 6,\n    cap: 20\n  }\n};\n\nconst dom = {\n  heroTitle: document.getElementById('hero-title')!,\n  heroStatus: document.getElementById('hero-status')!,\n  heroDuration: document.getElementById('hero-duration')!,\n  heroPresence: document.getElementById('hero-presence')!,\n  clockToggle: document.getElementById('clock-toggle') as HTMLButtonElement,\n  breakToggle: document.getElementById('break-toggle') as HTMLButtonElement,\n  lunchToggle: document.getElementById('lunch-toggle') as HTMLButtonElement,\n  presenceButton: document.getElementById('presence-button') as HTMLButtonElement,\n  downloadButton: document.getElementById('download-report') as HTMLButtonElement,\n  snapshotLabel: document.getElementById('snapshot-label')!,\n  statsList: document.getElementById('stats-list')!,\n  timesheetLabel: document.getElementById('timesheet-label')!,\n  timesheetBody: document.getElementById('timesheet-body')!,\n  timesheetView: document.getElementById('timesheet-view') as HTMLSelectElement,\n  requestList: document.getElementById('request-list')!,\n  requestForm: document.getElementById('request-form') as HTMLFormElement,\n  requestType: document.getElementById('request-type') as HTMLSelectElement,\n  requestHours: document.getElementById('request-hours') as HTMLInputElement,\n  requestStartDate: document.getElementById('request-start-date') as HTMLInputElement,\n  requestEndDate: document.getElementById('request-end-date') as HTMLInputElement,\n  requestReason: document.getElementById('request-reason') as HTMLTextAreaElement,\n  requestHint: document.getElementById('request-hint')!,\n  scheduleList: document.getElementById('schedule-list')!,\n  activityList: document.getElementById('activity-list')!,\n  makeupProgress: document.getElementById('makeup-progress')!\n};\n\ndom.timesheetView.value = state.timesheet.view;\n\nconst updateTimesheetFromToday = () => {\n  const hours = state.today.activeMinutes / 60;\n  const idleHours = state.today.idleMinutes / 60;\n  (Object.values(state.timesheet.periods) as TimesheetPeriod[]).forEach((period) => {\n    const day = period.days.find((entry) => entry.date === state.today.date);\n    if (day) {\n      day.activeHours = Math.round(hours * 100) / 100;\n      day.idleHours = Math.round(idleHours * 100) / 100;\n      day.breaks = state.today.breaksCount;\n      day.lunches = state.today.lunchCount;\n      day.presenceMisses = state.today.presenceMisses;\n      period.totals = recomputeTotals(period.days);\n    }\n  });\n};\n\nconst renderHero = () => {\n  dom.heroTitle.textContent = `${greeting(new Date())}, ${state.user.name}`;\n  dom.heroStatus.textContent =\n    state.session.status === 'working'\n      ? 'Working'\n      : state.session.status === 'break'\n      ? 'On Break'\n      : state.session.status === 'lunch'\n      ? 'At Lunch'\n      : 'Clocked Out';\n\n  const duration = (() => {\n    switch (state.session.status) {\n      case 'working':\n        return `Working for ${formatDurationMinutes(minutesBetween(state.session.startedAt))}`;\n      case 'break':\n        return `On break for ${formatDurationMinutes(minutesBetween(state.session.breakStartedAt))}`;\n      case 'lunch':\n        return `On lunch for ${formatDurationMinutes(minutesBetween(state.session.lunchStartedAt))}`;\n      default:\n        return state.session.lastClockedOutAt\n          ? `Last clock out ${formatRelative(state.session.lastClockedOutAt)}`\n          : 'No session yet';\n    }\n  })();\n\n  dom.heroDuration.textContent = duration;\n  dom.heroPresence.textContent = `Presence check in ${formatCountdown(\n    state.session.status === 'clocked_out' ? null : state.session.nextPresenceCheck\n  )}`;\n};\n\nconst renderSnapshot = () => {\n  dom.snapshotLabel.textContent = `${state.today.label} \u2022 ${state.user.location}`;\n  dom.makeupProgress.textContent = `${state.makeUpCap.used} / ${state.makeUpCap.cap} make-up hours used`;\n  dom.makeupProgress.title = `${Math.max(state.makeUpCap.cap - state.makeUpCap.used, 0)} hours remaining this month`;\n\n  const stats = [\n    {\n      label: 'Active hours',\n      value: formatHours(state.today.activeMinutes / 60),\n      meta: `Idle ${formatHours(state.today.idleMinutes / 60)} h`\n    },\n    {\n      label: 'Break time',\n      value: formatDurationMinutes(state.today.breakMinutes),\n      meta: `${state.today.breaksCount} break${state.today.breaksCount === 1 ? '' : 's'}`\n    },\n    {\n      label: 'Lunch',\n      value: formatDurationMinutes(state.today.lunchMinutes),\n      meta: state.today.lunchCount ? `${state.today.lunchCount} lunch` : 'No lunch logged'\n    },\n    {\n      label: 'Presence misses',\n      value: `${state.today.presenceMisses}`,\n      meta: state.session.lastPresenceCheck ? `Last check ${formatRelative(state.session.lastPresenceCheck)}` : 'Awaiting check'\n    }\n  ];\n\n  dom.statsList.innerHTML = stats\n    .map(\n      (item) => `\n        <div class=\"stats__item\">\n          <span class=\"stats__label\">${escapeHtml(item.label)}</span>\n          <span class=\"stats__value\">${escapeHtml(item.value)}</span>\n          <span class=\"stats__meta\">${escapeHtml(item.meta)}</span>\n        </div>\n      `\n    )\n    .join('\\n');\n};\n\nconst renderTimesheet = () => {\n  const period = state.timesheet.periods[state.timesheet.view];\n  dom.timesheetLabel.textContent = period.label;\n\n  dom.timesheetBody.innerHTML = period.days\n    .map((day) => {\n      const presence = day.presenceMisses > 0 ? `${day.presenceMisses} miss` : 'On track';\n      const presenceClass = day.presenceMisses > 0 ? 'pill pill--pending' : 'pill';\n      const noteRow = day.note ? `<div class=\"form-hint\">${escapeHtml(day.note)}</div>` : '';\n      return `\n        <tr>\n          <td>\n            <div>${escapeHtml(day.label)}</div>\n            ${noteRow}\n          </td>\n          <td>${escapeHtml(formatHours(day.activeHours))}</td>\n          <td>${escapeHtml(formatHours(day.idleHours))}</td>\n          <td>${day.breaks}</td>\n          <td>${day.lunches}</td>\n          <td><span class=\"${presenceClass}\">${escapeHtml(presence)}</span></td>\n        </tr>\n      `;\n    })\n    .join('\\n');\n};\n\nconst renderRequests = () => {\n  const items = state.requests\n    .slice()\n    .sort((a, b) => new Date(b.submittedAt).getTime() - new Date(a.submittedAt).getTime())\n    .map((request) => {\n      const start = new Date(request.startDate);\n      const end = request.endDate ? new Date(request.endDate) : start;\n      const rangeLabel = start.getTime() === end.getTime()\n        ? formatDateLong(start)\n        : `${formatDateLong(start)} \u2013 ${formatDateLong(end)}`;\n      const hoursLabel = request.hours ? `${request.hours}h` : '\u2014';\n      return `\n        <li class=\"list__item\">\n          <div class=\"list__headline\">${escapeHtml(requestLabel(request.type))}</div>\n          <div class=\"list__meta\">\n            <span class=\"${requestStatusClass(request.status)}\">${escapeHtml(request.status)}</span>\n            <span>${escapeHtml(rangeLabel)}</span>\n            <span>${escapeHtml(hoursLabel)}</span>\n            <span>${escapeHtml(formatRelative(new Date(request.submittedAt)))}</span>\n          </div>\n          <p class=\"form-hint\">${escapeHtml(request.reason)}</p>\n        </li>\n      `;\n    });\n\n  dom.requestList.innerHTML = items.join('') || '<li class=\"form-hint\">No requests submitted yet.</li>';\n  const remaining = Math.max(state.makeUpCap.cap - state.makeUpCap.used, 0);\n  dom.requestHint.textContent = `${state.makeUpCap.used} of ${state.makeUpCap.cap} make-up hours used this month \u2022 ${remaining} remaining.`;\n};\n\nconst renderSchedule = () => {\n  const defaults = state.schedule.defaults\n    .map(\n      (entry) => `\n        <li class=\"schedule__item\">\n          <div>\n            <strong>${escapeHtml(entry.label)}</strong>\n            <div class=\"schedule__meta\">Default \u2022 ${escapeHtml(entry.start)} \u2013 ${escapeHtml(entry.end)}</div>\n          </div>\n          <span class=\"pill\">Default</span>\n        </li>\n      `\n    )\n    .join('\\n');\n\n  const shifts = state.schedule.upcoming\n    .slice()\n    .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n    .map((entry) => {\n      const timeLabel = `${entry.start} \u2013 ${entry.end}`;\n      const statusClass =\n        entry.status === 'completed' ? 'pill pill--approved' : entry.status === 'in_progress' ? 'pill pill--pending' : 'pill';\n      const noteRow = entry.note ? `<div class=\"schedule__meta\">${escapeHtml(entry.note)}</div>` : '';\n      return `\n        <li class=\"schedule__item\">\n          <div>\n            <strong>${escapeHtml(entry.label)}</strong>\n            <div class=\"schedule__meta\">${escapeHtml(timeLabel)} \u2022 ${escapeHtml(entry.location)}</div>\n            ${noteRow}\n          </div>\n          <span class=\"${statusClass}\">${escapeHtml(entry.status.replace('_', ' '))}</span>\n        </li>\n      `;\n    })\n    .join('\\n');\n\n  dom.scheduleList.innerHTML = defaults + shifts;\n};\n\nconst renderActivity = () => {\n  dom.activityList.innerHTML = state.activity\n    .slice()\n    .sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())\n    .slice(0, 10)\n    .map(\n      (item) => `\n        <li class=\"timeline__item\">\n          <span class=\"timeline__label\">${categoryIcon(item.category)} ${escapeHtml(item.message)}</span>\n          <span class=\"timeline__time\">${escapeHtml(formatRelative(new Date(item.timestamp)))}</span>\n        </li>\n      `\n    )\n    .join('\\n');\n};\n\nconst updateControls = () => {\n  dom.clockToggle.textContent = state.session.status === 'clocked_out' ? 'Clock In' : 'Clock Out';\n  dom.breakToggle.textContent = state.session.status === 'break' ? 'End Break' : 'Start Break';\n  dom.lunchToggle.textContent = state.session.status === 'lunch' ? 'End Lunch' : 'Start Lunch';\n\n  const disabled = state.session.status === 'clocked_out';\n  dom.breakToggle.disabled = disabled;\n  dom.lunchToggle.disabled = disabled;\n  dom.presenceButton.disabled = disabled;\n};\n\nconst pushActivity = (message: string, category: ActivityCategory) => {\n  state.activity.unshift({\n    id: `activity-${Date.now()}`,\n    timestamp: new Date().toISOString(),\n    message,\n    category\n  });\n  state.activity = state.activity.slice(0, 20);\n  renderActivity();\n};\n\nconst render = () => {\n  renderHero();\n  renderSnapshot();\n  renderTimesheet();\n  renderRequests();\n  renderSchedule();\n  renderActivity();\n  updateControls();\n};\n\nconst completeBreakIfNeeded = () => {\n  if (state.session.status === 'break' && state.session.breakStartedAt) {\n    const minutes = minutesBetween(state.session.breakStartedAt);\n    state.today.breakMinutes += minutes;\n    state.today.breaksCount += 1;\n    state.session.breakStartedAt = null;\n    pushActivity(`Break ended (${formatDurationMinutes(minutes)})`, 'break');\n    logAction('break_end');\n  }\n};\n\nconst completeLunchIfNeeded = () => {\n  if (state.session.status === 'lunch' && state.session.lunchStartedAt) {\n    const minutes = minutesBetween(state.session.lunchStartedAt);\n    state.today.lunchMinutes += minutes;\n    state.today.lunchCount += 1;\n    state.session.lunchStartedAt = null;\n    pushActivity(`Lunch ended (${formatDurationMinutes(minutes)})`, 'lunch');\n    logAction('lunch_end');\n  }\n};\n\nconst handleClockToggle = async () => {\n  if (state.session.status === 'clocked_out') {\n    const started = await startSessionOnServer();\n    if (!started) {\n      return;\n    }\n    state.session.status = 'working';\n    state.session.startedAt = new Date();\n    state.session.lastClockedInAt = state.session.startedAt;\n    state.session.nextPresenceCheck = addMinutes(state.session.startedAt, 45);\n    pushActivity('Clocked in', 'session');\n    showToast('Clocked in. Have a great shift!', 'success');\n    logAction('clock_in');\n  } else {\n    if (state.session.status === 'break') {\n      const ended = await sendSimpleEvent('break/end');\n      if (!ended) {\n        return;\n      }\n      completeBreakIfNeeded();\n    }\n    if (state.session.status === 'lunch') {\n      const ended = await sendSimpleEvent('lunch/end');\n      if (!ended) {\n        return;\n      }\n      completeLunchIfNeeded();\n    }\n\n    const minutes = minutesBetween(state.session.startedAt);\n    if (minutes > 0) {\n      state.today.activeMinutes += minutes;\n    }\n    const ended = await endSessionOnServer();\n    if (!ended) {\n      return;\n    }\n    state.session.status = 'clocked_out';\n    state.session.lastClockedOutAt = new Date();\n    state.session.startedAt = null;\n    showToast('Clocked out. Rest well!', 'info');\n    pushActivity('Clocked out', 'session');\n    logAction('clock_out');\n  }\n  updateTimesheetFromToday();\n  render();\n  void hydrateFromServer();\n};\n\nconst handleBreakToggle = async () => {\n  if (state.session.status === 'clocked_out') {\n    showToast('Clock in before starting a break.', 'warning');\n    return;\n  }\n  if (state.session.status === 'break') {\n    const ended = await sendSimpleEvent('break/end');\n    if (!ended) {\n      return;\n    }\n    completeBreakIfNeeded();\n    state.session.status = 'working';\n  } else {\n    if (!(await ensureActiveSession())) {\n      return;\n    }\n    if (state.session.status === 'lunch') {\n      const lunchEnded = await sendSimpleEvent('lunch/end');\n      if (!lunchEnded) {\n        return;\n      }\n      completeLunchIfNeeded();\n    }\n    const started = await sendSimpleEvent('break/start');\n    if (!started) {\n      return;\n    }\n    state.session.status = 'break';\n    state.session.breakStartedAt = new Date();\n    pushActivity('Break started', 'break');\n    showToast('Enjoy your break.', 'success');\n    logAction('break_start');\n  }\n  updateTimesheetFromToday();\n  render();\n  void hydrateFromServer();\n};\n\nconst handleLunchToggle = async () => {\n  if (state.session.status === 'clocked_out') {\n    showToast('Clock in before starting lunch.', 'warning');\n    return;\n  }\n  if (state.session.status === 'lunch') {\n    const ended = await sendSimpleEvent('lunch/end');\n    if (!ended) {\n      return;\n    }\n    completeLunchIfNeeded();\n    state.session.status = 'working';\n  } else {\n    if (!(await ensureActiveSession())) {\n      return;\n    }\n    if (state.session.status === 'break') {\n      const breakEnded = await sendSimpleEvent('break/end');\n      if (!breakEnded) {\n        return;\n      }\n      completeBreakIfNeeded();\n    }\n    const started = await sendSimpleEvent('lunch/start');\n    if (!started) {\n      return;\n    }\n    state.session.status = 'lunch';\n    state.session.lunchStartedAt = new Date();\n    pushActivity('Lunch started', 'lunch');\n    showToast('Lunch started.', 'success');\n    logAction('lunch_start');\n  }\n  updateTimesheetFromToday();\n  render();\n  void hydrateFromServer();\n};\n\nconst handlePresence = async () => {\n  if (state.session.status === 'clocked_out') {\n    showToast('Start a session before confirming presence.', 'warning');\n    return;\n  }\n  if (activePromptId) {\n    const confirmed = await confirmPresencePrompt(activePromptId);\n    if (!confirmed) {\n      return;\n    }\n    activePromptId = null;\n  }\n  state.session.lastPresenceCheck = new Date();\n  state.session.nextPresenceCheck = addMinutes(state.session.lastPresenceCheck, 45);\n  state.today.presenceMisses = Math.max(0, state.today.presenceMisses - 1);\n  pushActivity('Presence confirmed', 'presence');\n  showToast('Presence confirmed.', 'success');\n  logAction('presence_confirm');\n  updateTimesheetFromToday();\n  render();\n  void hydrateFromServer();\n};\n\nconst handleRequestSubmit = async (event: SubmitEvent) => {\n  event.preventDefault();\n  const type = dom.requestType.value as RequestType;\n  const hours = Number(dom.requestHours.value) || 0;\n  if (hours <= 0) {\n    showToast('Enter a positive number of hours.', 'warning');\n    return;\n  }\n  const startDateValue = dom.requestStartDate.value;\n  const endDateValue = dom.requestEndDate.value;\n  const reason = dom.requestReason.value.trim();\n  if (!reason) {\n    showToast('Share a short reason for the request.', 'warning');\n    return;\n  }\n  if (!startDateValue) {\n    showToast('Choose a start date for the request.', 'warning');\n    return;\n  }\n  if (endDateValue && endDateValue < startDateValue) {\n    showToast('End date cannot be before start date.', 'warning');\n    return;\n  }\n  if (!appContext.email || !appContext.deviceId) {\n    showToast('Update Settings with your work email before submitting requests.', 'warning');\n    return;\n  }\n\n  const submittedAt = new Date();\n  if (!(await authenticate())) {\n    return;\n  }\n  try {\n    await postJson(\n      '/api/time-requests',\n      {\n        type,\n        startDate: startDateValue,\n        endDate: endDateValue || undefined,\n        hours,\n        reason,\n        email: appContext.email,\n        deviceId: appContext.deviceId\n      }\n    );\n  } catch (error) {\n    console.error('Failed to submit request', error);\n    showToast('Unable to submit request right now.', 'danger');\n    return;\n  }\n\n  const request: RequestItem = {\n    id: `req-${Date.now()}`,\n    type,\n    status: 'pending',\n    startDate: new Date(startDateValue).toISOString(),\n    endDate: endDateValue ? new Date(endDateValue).toISOString() : null,\n    hours,\n    reason,\n    submittedAt: submittedAt.toISOString()\n  };\n\n  state.requests.unshift(request);\n  if (type === 'make_up') {\n    state.makeUpCap.used = Math.min(state.makeUpCap.cap, Math.round((state.makeUpCap.used + hours) * 100) / 100);\n  }\n\n  dom.requestForm.reset();\n  dom.requestHours.value = '1';\n  showToast('Request submitted.', 'success');\n  pushActivity(`Submitted ${requestLabel(type)}`, 'request');\n  renderRequests();\n  renderSnapshot();\n  logAction('request_submit');\n  void hydrateFromServer();\n};\n\nconst handleTimesheetChange = () => {\n  state.timesheet.view = dom.timesheetView.value as TimesheetView;\n  renderTimesheet();\n};\n\nconst handleDownload = () => {\n  const period = state.timesheet.periods[state.timesheet.view];\n  const header = ['Date', 'Active Hours', 'Idle Hours', 'Breaks', 'Lunches', 'Presence Misses', 'Note'];\n  const rows = period.days.map((day) => [\n    day.label,\n    formatHours(day.activeHours),\n    formatHours(day.idleHours),\n    `${day.breaks}`,\n    `${day.lunches}`,\n    `${day.presenceMisses}`,\n    day.note ?? ''\n  ]);\n\n  const csv = [header, ...rows]\n    .map((line) => line.map((value) => `\"${value.replace(/\"/g, '\"\"')}\"`).join(','))\n    .join('\\n');\n\n  const blob = new Blob([csv], { type: 'text/csv' });\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  const slug = period.label.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n  link.download = `timesheet-${slug}.csv`;\n  document.body.appendChild(link);\n  link.click();\n  link.remove();\n  URL.revokeObjectURL(url);\n  showToast('Timesheet exported.', 'info');\n};\n\nconst parseDateOrNull = (value: string | null | undefined): Date | null =>\n  value ? new Date(value) : null;\n\nconst mapOverviewPeriod = (period: OverviewTimesheetPeriod): TimesheetPeriod => ({\n  label: period.label,\n  range: period.range,\n  days: period.days.map((day) => ({\n    date: day.date,\n    label: day.label,\n    activeHours: day.activeHours,\n    idleHours: day.idleHours,\n    breaks: day.breaks,\n    lunches: day.lunches,\n    presenceMisses: day.presenceMisses,\n    note: undefined\n  })),\n  totals: {\n    activeHours: period.totals.activeHours,\n    idleHours: period.totals.idleHours,\n    breaks: period.totals.breaks,\n    lunches: period.totals.lunches,\n    presenceMisses: period.totals.presenceMisses\n  }\n});\n\nconst applyOverview = (overview: OverviewResponse) => {\n  const previousView = state.timesheet.view;\n  const periods: Record<TimesheetView, TimesheetPeriod> = {\n    weekly: mapOverviewPeriod(overview.timesheet.periods.weekly),\n    pay_period: mapOverviewPeriod(overview.timesheet.periods.pay_period),\n    monthly: mapOverviewPeriod(overview.timesheet.periods.monthly)\n  };\n\n  const resolvedView = periods[previousView] ? previousView : overview.timesheet.view;\n\n  const startedAt = parseDateOrNull(overview.session.startedAt);\n  const breakStartedAt = parseDateOrNull(overview.session.breakStartedAt);\n  const lunchStartedAt = parseDateOrNull(overview.session.lunchStartedAt);\n  const lastPresenceCheck = parseDateOrNull(overview.session.lastPresenceCheck);\n  const lastClockedInAt = parseDateOrNull(overview.session.lastClockedInAt);\n  const lastClockedOutAt = parseDateOrNull(overview.session.lastClockedOutAt);\n  const nextPresenceRaw = parseDateOrNull(overview.session.nextPresenceCheck);\n  const presenceAnchor = lastPresenceCheck ?? startedAt ?? lastClockedInAt;\n  const nextPresenceCheck = nextPresenceRaw ?? (presenceAnchor ? addMinutes(presenceAnchor, 45) : addMinutes(new Date(), 45));\n\n  state = {\n    user: {\n      name: overview.user.name,\n      role: overview.user.role,\n      location: overview.user.location\n    },\n    session: {\n      status: overview.session.status,\n      startedAt,\n      breakStartedAt,\n      lunchStartedAt,\n      lastPresenceCheck,\n      nextPresenceCheck,\n      lastClockedInAt,\n      lastClockedOutAt\n    },\n    today: { ...overview.today },\n    timesheet: {\n      view: resolvedView,\n      periods\n    },\n    requests: overview.requests.map((request) => ({\n      id: request.id,\n      type: request.type,\n      status: request.status,\n      startDate: request.startDate,\n      endDate: request.endDate ?? null,\n      hours: request.hours,\n      reason: request.reason,\n      submittedAt: request.submittedAt\n    })),\n    schedule: {\n      defaults: overview.schedule.defaults.slice(),\n      upcoming: overview.schedule.upcoming.slice()\n    },\n    activity: overview.activity.slice(),\n    makeUpCap: { ...overview.makeUpCap }\n  };\n\n  appContext.sessionId = overview.session.id;\n\n  dom.timesheetView.value = state.timesheet.view;\n  updateTimesheetFromToday();\n  render();\n  showToast('Synced with attendance server.', 'info');\n};\n\nconst fetchOverview = async (baseUrl: string, email: string): Promise<OverviewResponse> => {\n  const url = new URL('/api/app/overview', baseUrl);\n  url.searchParams.set('email', email);\n\n  const response = await fetch(url.toString(), { method: 'GET' });\n  if (!response.ok) {\n    throw new Error(`Overview request failed with status ${response.status}`);\n  }\n  return (await response.json()) as OverviewResponse;\n};\n\nconst hydrateFromServer = async () => {\n  try {\n    const [bootstrap, settings] = await Promise.all([\n      window.attendance.getBootstrap(),\n      window.attendance.getSettings()\n    ]);\n\n    const email = settings.workEmail;\n    if (!email) {\n      showToast('Add your work email in Settings to load live data.', 'warning');\n      return;\n    }\n\n    const baseUrl = settings.serverBaseUrl || bootstrap.baseUrl;\n    appContext = {\n      baseUrl,\n      deviceId: bootstrap.deviceId,\n      platform: bootstrap.platform ?? appContext.platform,\n      email,\n      sessionId: appContext.sessionId\n    };\n\n    await authenticate();\n\n    const overview = await fetchOverview(baseUrl, email);\n    applyOverview(overview);\n  } catch (error) {\n    console.error('Failed to hydrate from server', error);\n    showToast('Unable to load the latest data from the server.', 'danger');\n  }\n};\n\nconst initialize = () => {\n  updateTimesheetFromToday();\n  render();\n\n  dom.clockToggle.addEventListener('click', handleClockToggle);\n  dom.breakToggle.addEventListener('click', handleBreakToggle);\n  dom.lunchToggle.addEventListener('click', handleLunchToggle);\n  dom.presenceButton.addEventListener('click', handlePresence);\n  dom.requestForm.addEventListener('submit', handleRequestSubmit);\n  dom.timesheetView.addEventListener('change', handleTimesheetChange);\n  dom.downloadButton.addEventListener('click', handleDownload);\n\n  registerPresenceListeners();\n\n  window.setInterval(renderHero, 30_000);\n  window.addEventListener('focus', renderHero);\n\n  void hydrateFromServer();\n};\n\ninitialize();\n"],
  "mappings": "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",
  "names": ["text", "ended"]
}
