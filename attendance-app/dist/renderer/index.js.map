{
  "version": 3,
  "sources": ["../../src/renderer/pauseLogic.ts", "../../src/renderer/index.ts"],
  "sourcesContent": ["export type PauseKind = 'break' | 'lunch';\nexport type PauseAction = 'start' | 'end';\n\nexport interface PauseApiPayload {\n  kind: PauseKind;\n  action: PauseAction;\n  sequence: number;\n  startedAt: string;\n  endedAt: string | null;\n  durationMinutes: number | null;\n}\n\nexport interface PauseSnapshot {\n  kind: PauseKind;\n  sequence: number;\n  startedAt: string;\n  endedAt: string | null;\n  durationMinutes: number | null;\n}\n\nexport interface PauseRecord {\n  kind: PauseKind;\n  sequence: number;\n  startedAt: Date;\n  endedAt: Date | null;\n  durationMinutes: number | null;\n}\n\nexport interface PauseState {\n  current: PauseRecord | null;\n  history: PauseRecord[];\n}\n\nconst MINUTE_MS = 60_000;\n\nexport const computePauseDuration = (\n  record: { startedAt: Date; endedAt: Date | null; durationMinutes: number | null },\n  now: Date\n) => record.durationMinutes ?? Math.max(0, Math.ceil(((record.endedAt ?? now).getTime() - record.startedAt.getTime()) / MINUTE_MS));\n\nconst createRecord = (snapshot: PauseSnapshot, now: Date): PauseRecord => ({\n  kind: snapshot.kind,\n  sequence: snapshot.sequence,\n  startedAt: new Date(snapshot.startedAt),\n  endedAt: snapshot.endedAt ? new Date(snapshot.endedAt) : null,\n  durationMinutes: snapshot.durationMinutes\n});\n\nconst upsertHistory = (history: PauseRecord[], entry: PauseRecord) => {\n  const next = history.filter((item) => !(item.kind === entry.kind && item.sequence === entry.sequence));\n  next.push(entry);\n  next.sort((a, b) => a.startedAt.getTime() - b.startedAt.getTime());\n  return next;\n};\n\nexport const applyPauseUpdate = (state: PauseState, payload: PauseApiPayload, now: Date): PauseState => {\n  const existingCurrent = state.current;\n  const baseRecord: PauseRecord = {\n    kind: payload.kind,\n    sequence: payload.sequence,\n    startedAt: new Date(payload.startedAt),\n    endedAt: payload.endedAt ? new Date(payload.endedAt) : null,\n    durationMinutes: payload.durationMinutes\n  };\n\n  if (payload.action === 'start') {\n    if (\n      existingCurrent &&\n      existingCurrent.kind === baseRecord.kind &&\n      existingCurrent.sequence === baseRecord.sequence &&\n      existingCurrent.startedAt.getTime() === baseRecord.startedAt.getTime()\n    ) {\n      return state;\n    }\n    return {\n      current: { ...baseRecord, endedAt: null, durationMinutes: null },\n      history: state.history.filter(\n        (item) => !(item.kind === baseRecord.kind && item.sequence === baseRecord.sequence)\n      )\n    };\n  }\n\n  const durationMinutes = computePauseDuration(baseRecord, now);\n  const updatedHistory = upsertHistory(state.history, {\n    ...baseRecord,\n    endedAt: baseRecord.endedAt,\n    durationMinutes\n  });\n\n  const nextCurrent =\n    existingCurrent &&\n    existingCurrent.kind === baseRecord.kind &&\n    existingCurrent.sequence === baseRecord.sequence\n      ? null\n      : existingCurrent;\n\n  return { current: nextCurrent, history: updatedHistory };\n};\n\nexport const buildPauseState = (\n  snapshot: { current: PauseSnapshot | null; history: PauseSnapshot[] },\n  now: Date\n): PauseState => {\n  const historyRecords = snapshot.history\n    .map((entry) => ({\n      kind: entry.kind,\n      sequence: entry.sequence,\n      startedAt: new Date(entry.startedAt),\n      endedAt: entry.endedAt ? new Date(entry.endedAt) : null,\n      durationMinutes: entry.durationMinutes ?? null\n    }))\n    .map((entry) => ({\n      ...entry,\n      durationMinutes: entry.durationMinutes ?? computePauseDuration(entry, now)\n    }))\n    .sort((a, b) => a.startedAt.getTime() - b.startedAt.getTime());\n\n  const currentRecord = snapshot.current ? createRecord(snapshot.current, now) : null;\n  const normalizedHistory = currentRecord\n    ? historyRecords.filter(\n        (item) => !(item.kind === currentRecord.kind && item.sequence === currentRecord.sequence)\n      )\n    : historyRecords;\n\n  return {\n    current: currentRecord,\n    history: normalizedHistory\n  };\n};\n\nexport const formatPauseLabel = (record: PauseRecord) =>\n  `${record.kind === 'break' ? 'Break' : 'Lunch'} ${record.sequence}`;\n", "import {\n  applyPauseUpdate,\n  buildPauseState,\n  computePauseDuration as computePauseDurationHelper,\n  formatPauseLabel,\n  type PauseAction,\n  type PauseApiPayload,\n  type PauseKind,\n  type PauseRecord,\n  type PauseSnapshot,\n  type PauseState\n} from './pauseLogic';\n\nconst HEARTBEAT_INTERVAL_MS = 60_000;\nconst IDLE_THRESHOLD_SECONDS = 10 * 60; // 10 minutes\nconst PRESENCE_CONFIRMATION_WINDOW_MS = 60_000;\nconst ACTIVITY_HISTORY_MINUTES = 10;\n\ninterface ApiRequest<TResponse = unknown> {\n  path: string;\n  method?: 'POST' | 'GET' | 'PUT' | 'PATCH' | 'DELETE';\n  body?: unknown;\n  requiresAuth?: boolean;\n  description?: string;\n  tokenOverride?: string | null;\n  transform?: (data: unknown) => TResponse;\n}\n\nclass ApiError extends Error {\n  status?: number;\n  body?: unknown;\n  requestId?: string;\n\n  constructor(message: string, status?: number, body?: unknown, requestId?: string) {\n    super(message);\n    this.name = 'ApiError';\n    this.status = status;\n    this.body = body;\n    this.requestId = requestId;\n  }\n}\n\nclass ApiClient {\n  private token: string | null = null;\n\n  constructor(private baseUrl: string) {}\n\n  setToken(token: string | null) {\n    this.token = token;\n  }\n\n  setBaseUrl(url: string) {\n    this.baseUrl = url;\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  async request<TResponse = unknown>(request: ApiRequest<TResponse>): Promise<TResponse> {\n    const { path, method = 'POST', body, requiresAuth = false, tokenOverride, transform } = request;\n    const normalizedMethod = method.toUpperCase() as typeof method;\n    const isGetRequest = normalizedMethod === 'GET';\n\n    const headers: Record<string, string> = { 'Content-Type': 'application/json' };\n    const requestId = (typeof crypto !== 'undefined' && 'randomUUID' in crypto\n      ? crypto.randomUUID()\n      : `req_${Math.random().toString(36).slice(2, 10)}`);\n    headers['X-Debug-Req'] = requestId;\n\n    const authToken = requiresAuth ? tokenOverride ?? this.token : null;\n    if (requiresAuth && !authToken) {\n      throw new ApiError('No authentication token available');\n    }\n\n    if (requiresAuth && authToken) {\n      headers.Authorization = `Bearer ${authToken}`;\n    }\n\n    if (isGetRequest) {\n      headers['Cache-Control'] = 'no-cache';\n      headers.Pragma = 'no-cache';\n    }\n\n    for (const key of Object.keys(headers)) {\n      if (key.toLowerCase() === 'if-none-match') {\n        delete headers[key];\n      }\n    }\n\n    const stringify = (payload: unknown) => {\n      if (payload === undefined || payload === null) {\n        return '';\n      }\n      try {\n        const raw = typeof payload === 'string' ? payload : JSON.stringify(payload);\n        return raw.length > 1024 ? `${raw.slice(0, 1024)}\u2026` : raw;\n      } catch (error) {\n        return `[unserializable:${(error as Error).message}]`;\n      }\n    };\n\n    const executeFetch = async (attempt: number): Promise<Response> => {\n      const url = new URL(path, this.baseUrl);\n      if (isGetRequest) {\n        url.searchParams.set('_t', Date.now().toString());\n      }\n\n      const fetchHeaders = { ...headers };\n      const requestInit: RequestInit = { method: normalizedMethod, headers: fetchHeaders };\n      if (isGetRequest) {\n        requestInit.cache = attempt === 0 ? 'no-store' : 'reload';\n      }\n      if (body !== undefined) {\n        requestInit.body = JSON.stringify(body);\n      }\n\n      console.info('[api]', {\n        phase: 'request',\n        attempt: attempt + 1,\n        method: normalizedMethod,\n        url: url.toString(),\n        requestId,\n        body: attempt === 0 ? stringify(body) : undefined\n      });\n\n      try {\n        return await fetch(url.toString(), requestInit);\n      } catch (error) {\n        console.error('[api]', {\n          phase: 'network_error',\n          method: normalizedMethod,\n          url: url.toString(),\n          requestId,\n          message: (error as Error).message\n        });\n        recordRequestTrace({ requestId, url: url.toString(), status: -1 });\n        throw new ApiError((error as Error).message, undefined, undefined, requestId);\n      }\n    };\n\n    let response = await executeFetch(0);\n\n    if (response.status === 304 && isGetRequest) {\n      console.warn('[api]', {\n        phase: 'not_modified_retry',\n        method: normalizedMethod,\n        path,\n        requestId\n      });\n      response = await executeFetch(1);\n    }\n\n    // Treat 204 No Content as a successful response with no body\n    if (response.status === 204) {\n      console.info('[api]', {\n        phase: 'response',\n        method: normalizedMethod,\n        path,\n        status: 204,\n        requestId\n      });\n      recordRequestTrace({ requestId, url: new URL(path, this.baseUrl).toString(), status: 204 });\n      return undefined;\n    }\n\n    if (!response.ok) {\n      let errorBody: unknown = null;\n      let snippet = '';\n      try {\n        const raw = await response.text();\n        snippet = stringify(raw);\n        const contentType = response.headers.get('content-type');\n        errorBody = contentType && contentType.includes('application/json') ? JSON.parse(raw) : raw;\n      } catch (error) {\n        errorBody = (error as Error).message;\n        snippet = stringify(errorBody);\n      }\n\n      console.warn('[api]', {\n        phase: 'response_error',\n        method: normalizedMethod,\n        path,\n        status: response.status,\n        requestId,\n        body: snippet\n      });\n\n      recordRequestTrace({ requestId, url: `${this.baseUrl}${path}`, status: response.status });\n\n      throw new ApiError(`Request failed with status ${response.status}`, response.status, errorBody, requestId);\n    }\n\n    const contentType = response.headers.get('content-type');\n    let data: unknown;\n    if (contentType && contentType.includes('application/json')) {\n      data = await response.json();\n    } else {\n      data = await response.text();\n    }\n\n    const serverDateHeader = response.headers.get('date');\n    processServerDateHeader(serverDateHeader, requestId);\n\n    console.info('[api]', {\n      phase: 'response',\n      method: normalizedMethod,\n      path,\n      status: response.status,\n      requestId\n    });\n\n    recordRequestTrace({ requestId, url: `${this.baseUrl}${path}`, status: response.status });\n\n    return transform ? transform(data) : (data as TResponse);\n  }\n}\n\n// Manual test tip: stub global fetch so the first call returns a 304 and the second a 200,\n// then assert request() resolves with the retry payload to cover the 304 retry path.\n\ntype AuthTokens = {\n  tokenType: string;\n  scope: string;\n  accessToken: string;\n  accessTokenExpiresAt?: string;\n  refreshToken: string;\n  refreshTokenExpiresAt?: string;\n};\n\ntype QueueEntry = QueueItem;\n\ntype QueuedRequest = ApiRequest & {\n  attempt: number;\n  nextAttemptAt: number;\n  tokenOverride?: string | null;\n};\n\ntype TimeRequest = {\n  id?: string;\n  type: string;\n  startDate: string;\n  endDate?: string | null;\n  hours: number;\n  reason: string;\n  status: 'pending' | 'approved' | 'denied' | string;\n  createdAt?: string;\n};\n\ntype TimesheetView = 'weekly' | 'pay_period' | 'monthly';\n\ntype TimesheetTotals = {\n  activeMinutes: number;\n  activeHours: number;\n  idleMinutes: number;\n  idleHours: number;\n  breaks: number;\n  lunches: number;\n  presenceMisses: number;\n};\n\ntype TimesheetEditRequest = {\n  id: string;\n  status: 'pending' | 'approved' | 'denied' | string;\n  targetDate: string;\n  createdAt: string;\n  updatedAt: string;\n  reason: string;\n  requestedMinutes: number | null;\n  adminNote: string | null;\n  reviewedAt: string | null;\n};\n\ntype TimesheetDay = {\n  date: string;\n  label: string;\n  activeMinutes: number;\n  idleMinutes: number;\n  breaks: number;\n  lunches: number;\n  presenceMisses: number;\n  editRequests: TimesheetEditRequest[];\n};\n\ntype TimesheetSummary = {\n  view: TimesheetView;\n  label: string;\n  rangeStart: string;\n  rangeEnd: string;\n  rangeStartLabel: string;\n  rangeEndLabel: string;\n  totals: TimesheetTotals;\n  days: TimesheetDay[];\n  editRequests: TimesheetEditRequest[];\n};\n\nclass OfflineQueue {\n  private queue: QueueEntry[] = [];\n  private processing = false;\n  private hydrated = false;\n\n  constructor(private readonly client: ApiClient) {}\n\n  async initialize() {\n    if (this.hydrated) {\n      return;\n    }\n    try {\n      const persisted = await window.attendance.loadOfflineQueue();\n      if (Array.isArray(persisted) && persisted.length > 0) {\n        this.queue.push(...persisted);\n      }\n    } catch (error) {\n      console.warn('Failed to hydrate offline queue', error);\n    }\n    this.hydrated = true;\n    if (this.queue.length > 0) {\n      void this.process();\n    }\n  }\n\n  hasPending() {\n    return this.queue.length > 0;\n  }\n\n  enqueue(request: ApiRequest) {\n    const { transform: _unused, ...rest } = request;\n    const entry: QueueEntry = {\n      ...rest,\n      tokenOverride: request.tokenOverride ?? this.client.getToken(),\n      attempt: 0,\n      nextAttemptAt: Date.now()\n    };\n    this.queue.push(entry);\n    void this.persist();\n    void this.process();\n  }\n\n  reset() {\n    this.queue.length = 0;\n    void this.persist();\n  }\n\n  private async persist() {\n    try {\n      if (this.queue.length > 0) {\n        await window.attendance.saveOfflineQueue(this.queue);\n      } else {\n        await window.attendance.clearOfflineQueue();\n      }\n    } catch (error) {\n      console.warn('Failed to persist offline queue', error);\n    }\n  }\n\n  async process() {\n    if (this.processing) {\n      return;\n    }\n    this.processing = true;\n\n    while (this.queue.length > 0) {\n      const request = this.queue[0];\n      const now = Date.now();\n      if (request.nextAttemptAt > now) {\n        const waitMs = request.nextAttemptAt - now;\n        await new Promise((resolve) => setTimeout(resolve, waitMs));\n      }\n\n      try {\n        if (request.requiresAuth) {\n          request.tokenOverride = this.client.getToken();\n        }\n        await this.client.request(request);\n        this.queue.shift();\n        console.info(`[OfflineQueue] ${request.description ?? request.path} sent successfully`);\n        await this.persist();\n      } catch (error) {\n        const retryable = shouldQueue(error);\n        if (!retryable) {\n          console.warn(\n            `[OfflineQueue] dropping non-retryable request ${request.description ?? request.path}`,\n            error\n          );\n          this.queue.shift();\n          await this.persist();\n          continue;\n        }\n        request.attempt += 1;\n        const delay = Math.min(60_000, Math.pow(2, request.attempt) * 1000);\n        request.nextAttemptAt = Date.now() + delay;\n        console.warn(`[OfflineQueue] ${request.description ?? request.path} retry in ${delay / 1000}s`, error);\n        await this.persist();\n      }\n    }\n\n    this.processing = false;\n  }\n}\n\ntype SessionState = 'inactive' | 'active' | 'idle' | 'break' | 'lunch';\n\ntype HealthStatus =\n  | { state: 'idle' }\n  | { state: 'testing'; baseUrl: string }\n  | { state: 'success'; baseUrl: string; version: string; time: Date }\n  | { state: 'error'; baseUrl: string; detail: string };\n\ninterface PresencePrompt {\n  id: string;\n  expiresAt: string;\n  message?: string;\n}\n\ninterface AppState {\n  bootstrap: BootstrapData | null;\n  email: string | null;\n  token: string | null;\n  refreshToken: string | null;\n  tokenExpiresAt: Date | null;\n  tokenScope: string | null;\n  sessionId: string | null;\n  sessionState: SessionState;\n  lastHeartbeatAt: Date | null;\n  currentPrompt: PresencePrompt | null;\n  settings: AppSettings | null;\n  systemStatus: SystemStatus | null;\n  requests: TimeRequest[];\n  user: { id: number; email: string; name?: string | null; role?: string | null } | null;\n  timesheet: TimesheetSummary | null;\n  timesheetView: TimesheetView;\n  timesheetReference: string | null;\n  timesheetTimezone: string | null;\n  timesheetLoading: boolean;\n  lastServerSkewMs: number | null;\n  lastServerDate: Date | null;\n  lastRequestTrace: { requestId: string; url: string; status: number } | null;\n  pauseHistory: PauseRecord[];\n  currentPause: PauseRecord | null;\n  healthStatus: HealthStatus;\n  lastHealthSuccess: { baseUrl: string; version: string; time: Date } | null;\n}\n\nconst state: AppState = {\n  bootstrap: null,\n  email: null,\n  token: null,\n  refreshToken: null,\n  tokenExpiresAt: null,\n  tokenScope: null,\n  sessionId: null,\n  sessionState: 'inactive',\n  lastHeartbeatAt: null,\n  currentPrompt: null,\n  settings: null,\n  systemStatus: null,\n  requests: [],\n  user: null,\n  timesheet: null,\n  timesheetView: 'pay_period',\n  timesheetReference: null,\n  timesheetTimezone: null,\n  timesheetLoading: false,\n  lastServerSkewMs: null,\n  lastServerDate: null,\n  lastRequestTrace: null,\n  pauseHistory: [],\n  currentPause: null,\n  healthStatus: { state: 'idle' },\n  lastHealthSuccess: null\n};\n\nconst activityBuckets = new Map<string, { keys: number; mouse: number }>();\n\nlet heartbeatTimer: number | null = null;\nlet presenceTimeout: number | null = null;\nlet pauseTimer: number | null = null;\nlet apiClient: ApiClient;\nlet offlineQueue: OfflineQueue;\nlet refreshInFlight: Promise<void> | null = null;\nlet pendingTimesheetEdit: { date: string; label: string } | null = null;\n\nconst applyAuthTokens = (tokens: AuthTokens) => {\n  state.token = tokens.accessToken;\n  state.refreshToken = tokens.refreshToken;\n  state.tokenExpiresAt = tokens.accessTokenExpiresAt ? new Date(tokens.accessTokenExpiresAt) : null;\n  state.tokenScope = tokens.scope ?? null;\n  apiClient.setToken(tokens.accessToken);\n  updateDiagnostics();\n};\n\nconst getDeviceId = () => state.settings?.deviceId ?? state.bootstrap?.deviceId ?? '';\n\nconst statusEmailEl = document.getElementById('status-email');\nconst statusSessionEl = document.getElementById('status-session');\nconst statusHeartbeatEl = document.getElementById('status-heartbeat');\nconst statusPauseEl = document.getElementById('status-pause');\nconst statusForegroundEl = document.getElementById('status-foreground');\n\nconst loginModal = document.getElementById('login-modal') as HTMLDivElement | null;\nconst loginForm = document.getElementById('login-form') as HTMLFormElement | null;\nconst loginEmailInput = document.getElementById('login-email') as HTMLInputElement | null;\nconst loginErrorEl = document.getElementById('login-error') as HTMLParagraphElement | null;\nconst loginCancelBtn = document.getElementById('login-cancel') as HTMLButtonElement | null;\n\nconst presenceModal = document.getElementById('presence-modal') as HTMLDivElement | null;\nconst presenceMessageEl = document.getElementById('presence-message') as HTMLParagraphElement | null;\nconst presenceConfirmBtn = document.getElementById('presence-confirm') as HTMLButtonElement | null;\nconst presenceDismissBtn = document.getElementById('presence-dismiss') as HTMLButtonElement | null;\n\nconst settingsModal = document.getElementById('settings-modal') as HTMLDivElement | null;\nconst settingsForm = document.getElementById('settings-form') as HTMLFormElement | null;\nconst settingsEmailInput = document.getElementById('settings-email') as HTMLInputElement | null;\nconst settingsBaseUrlInput = document.getElementById('settings-base-url') as HTMLInputElement | null;\nconst settingsErrorEl = document.getElementById('settings-error') as HTMLParagraphElement | null;\nconst settingsSuccessEl = document.getElementById('settings-success') as HTMLParagraphElement | null;\nconst settingsCancelBtn = document.getElementById('settings-cancel') as HTMLButtonElement | null;\nconst settingsTestBtn = document.getElementById('settings-test') as HTMLButtonElement | null;\nconst openSettingsBtn = document.getElementById('open-settings') as HTMLButtonElement | null;\nconst openRequestsBtn = document.getElementById('open-requests') as HTMLButtonElement | null;\nconst refreshRequestsBtn = document.getElementById('refresh-requests') as HTMLButtonElement | null;\nconst requestsListEl = document.getElementById('requests-list') as HTMLUListElement | null;\nconst requestsEmptyEl = document.getElementById('requests-empty') as HTMLParagraphElement | null;\n\nconst diagnosticsPanel = document.getElementById('diagnostics') as HTMLDivElement | null;\nconst diagnosticsContentEl = document.getElementById('diagnostics-content') as HTMLPreElement | null;\nconst toastEl = document.getElementById('app-toast') as HTMLDivElement | null;\n\nconst requestModal = document.getElementById('request-modal') as HTMLDivElement | null;\nconst requestForm = document.getElementById('request-form') as HTMLFormElement | null;\nconst requestCancelBtn = document.getElementById('request-cancel') as HTMLButtonElement | null;\nconst requestTypeInput = document.getElementById('request-type') as HTMLSelectElement | null;\nconst requestStartDateInput = document.getElementById('request-start-date') as HTMLInputElement | null;\nconst requestEndDateInput = document.getElementById('request-end-date') as HTMLInputElement | null;\nconst requestHoursInput = document.getElementById('request-hours') as HTMLInputElement | null;\nconst requestReasonInput = document.getElementById('request-reason') as HTMLTextAreaElement | null;\nconst requestErrorEl = document.getElementById('request-error') as HTMLParagraphElement | null;\nconst requestSuccessEl = document.getElementById('request-success') as HTMLParagraphElement | null;\nconst openTimesheetBtn = document.getElementById('open-timesheet') as HTMLButtonElement | null;\nconst timesheetModal = document.getElementById('timesheet-modal') as HTMLDivElement | null;\nconst timesheetFilterForm = document.getElementById('timesheet-filter') as HTMLFormElement | null;\nconst timesheetViewSelect = document.getElementById('timesheet-view') as HTMLSelectElement | null;\nconst timesheetDateGroup = document.getElementById('timesheet-date-group') as HTMLLabelElement | null;\nconst timesheetMonthGroup = document.getElementById('timesheet-month-group') as HTMLLabelElement | null;\nconst timesheetDateInput = document.getElementById('timesheet-date') as HTMLInputElement | null;\nconst timesheetMonthInput = document.getElementById('timesheet-month') as HTMLInputElement | null;\nconst timesheetSummaryEl = document.getElementById('timesheet-summary') as HTMLDivElement | null;\nconst timesheetTable = document.getElementById('timesheet-table') as HTMLTableElement | null;\nconst timesheetTableBody = document.getElementById('timesheet-table-body') as HTMLTableSectionElement | null;\nconst timesheetEmptyEl = document.getElementById('timesheet-empty') as HTMLParagraphElement | null;\nconst timesheetLoadingEl = document.getElementById('timesheet-loading') as HTMLParagraphElement | null;\nconst timesheetCloseBtn = document.getElementById('timesheet-close') as HTMLButtonElement | null;\nconst timesheetRefreshBtn = document.getElementById('timesheet-refresh') as HTMLButtonElement | null;\nconst timesheetRequestsSection = document.getElementById('timesheet-requests-section') as HTMLElement | null;\nconst timesheetRequestsRefreshBtn = document.getElementById('timesheet-requests-refresh') as HTMLButtonElement | null;\nconst timesheetRequestsList = document.getElementById('timesheet-requests-list') as HTMLUListElement | null;\nconst timesheetRequestsEmpty = document.getElementById('timesheet-requests-empty') as HTMLParagraphElement | null;\nconst timesheetEditModal = document.getElementById('timesheet-edit-modal') as HTMLDivElement | null;\nconst timesheetEditForm = document.getElementById('timesheet-edit-form') as HTMLFormElement | null;\nconst timesheetEditDateLabel = document.getElementById('timesheet-edit-date-label') as HTMLParagraphElement | null;\nconst timesheetEditReasonInput = document.getElementById('timesheet-edit-reason') as HTMLTextAreaElement | null;\nconst timesheetEditHoursInput = document.getElementById('timesheet-edit-hours') as HTMLInputElement | null;\nconst timesheetEditErrorEl = document.getElementById('timesheet-edit-error') as HTMLParagraphElement | null;\nconst timesheetEditSuccessEl = document.getElementById('timesheet-edit-success') as HTMLParagraphElement | null;\nconst timesheetEditCancelBtn = document.getElementById('timesheet-edit-cancel') as HTMLButtonElement | null;\n\nconst buttons = document.querySelectorAll<HTMLButtonElement>('[data-action]');\n\ntype PresenceUiMode = 'overlay' | 'popup' | 'both';\n\nlet presenceUiMode: PresenceUiMode = 'both';\nlet activePromptId: string | null = null;\nlet presenceAckInFlight = false;\n\nconst isPopupModeEnabled = () => presenceUiMode === 'popup' || presenceUiMode === 'both';\n\nconst minutesLabel = (minutes: number) => `${Math.max(0, minutes)} min`;\n\nconst escapeHtml = (value: string) =>\n  value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n\nconst renderHealthStatus = () => {\n  if (!settingsSuccessEl || !settingsErrorEl) {\n    return;\n  }\n\n  settingsSuccessEl.textContent = '';\n  settingsSuccessEl.innerHTML = '';\n  settingsErrorEl.textContent = '';\n  settingsErrorEl.innerHTML = '';\n\n  const status = state.healthStatus;\n\n  switch (status.state) {\n    case 'idle':\n      return;\n    case 'testing':\n      settingsSuccessEl.textContent = 'Testing connection\u2026';\n      return;\n    case 'success': {\n      const formattedTime = new Intl.DateTimeFormat(undefined, {\n        dateStyle: 'short',\n        timeStyle: 'short'\n      }).format(status.time);\n      const html = `<span class=\"settings-status-badge settings-status-badge--success\" aria-hidden=\"true\">\u25CF</span><span> Connected \u2022 v${escapeHtml(\n        status.version\n      )} \u2022 ${escapeHtml(formattedTime)}</span>`;\n      settingsSuccessEl.innerHTML = html;\n      return;\n    }\n    case 'error': {\n      const html = `<span class=\"settings-status-badge settings-status-badge--error\" aria-hidden=\"true\">!</span><span> Unable to reach server.</span><span class=\"settings-status-detail\">${escapeHtml(\n        status.detail\n      )}</span>`;\n      settingsErrorEl.innerHTML = html;\n      return;\n    }\n    default:\n      return;\n  }\n};\n\nconst parsePausePayload = (value: unknown): PauseApiPayload | undefined => {\n  if (!value || typeof value !== 'object') {\n    return undefined;\n  }\n  const raw = value as Record<string, unknown>;\n  const kind = raw.kind === 'break' || raw.kind === 'lunch' ? (raw.kind as PauseKind) : undefined;\n  const action = raw.action === 'start' || raw.action === 'end' ? (raw.action as PauseAction) : undefined;\n  if (!kind || !action) {\n    return undefined;\n  }\n  const sequenceValue = Number(raw.sequence);\n  if (!Number.isFinite(sequenceValue)) {\n    return undefined;\n  }\n  const startedAt = typeof raw.startedAt === 'string' ? raw.startedAt : undefined;\n  if (!startedAt) {\n    return undefined;\n  }\n  const endedAt = typeof raw.endedAt === 'string' ? raw.endedAt : raw.endedAt === null ? null : null;\n  const durationMinutes = typeof raw.durationMinutes === 'number' ? raw.durationMinutes : null;\n  return {\n    kind,\n    action,\n    sequence: Math.max(1, Math.floor(sequenceValue)),\n    startedAt,\n    endedAt,\n    durationMinutes\n  };\n};\n\nconst parsePauseSnapshot = (value: unknown): PauseSnapshot | undefined => {\n  if (!value || typeof value !== 'object') {\n    return undefined;\n  }\n  const raw = value as Record<string, unknown>;\n  const kind = raw.kind === 'break' || raw.kind === 'lunch' ? (raw.kind as PauseKind) : undefined;\n  if (!kind) {\n    return undefined;\n  }\n  const sequenceValue = Number(raw.sequence);\n  if (!Number.isFinite(sequenceValue)) {\n    return undefined;\n  }\n  const startedAt = typeof raw.startedAt === 'string' ? raw.startedAt : undefined;\n  if (!startedAt) {\n    return undefined;\n  }\n  const endedAt = typeof raw.endedAt === 'string' ? raw.endedAt : raw.endedAt === null ? null : null;\n  const durationMinutes = typeof raw.durationMinutes === 'number' ? raw.durationMinutes : null;\n  return {\n    kind,\n    sequence: Math.max(1, Math.floor(sequenceValue)),\n    startedAt,\n    endedAt,\n    durationMinutes\n  };\n};\n\nconst parsePauseStateResponse = (value: unknown): { current: PauseSnapshot | null; history: PauseSnapshot[] } | null => {\n  if (!value || typeof value !== 'object') {\n    return null;\n  }\n  const raw = value as Record<string, unknown>;\n  const currentRaw = raw.current ?? null;\n  const current = currentRaw ? parsePauseSnapshot(currentRaw) ?? null : null;\n  const historyRaw = Array.isArray(raw.history) ? raw.history : [];\n  const history = historyRaw\n    .map((entry) => parsePauseSnapshot(entry))\n    .filter((entry): entry is PauseSnapshot => Boolean(entry));\n  return { current, history };\n};\n\nconst updatePauseDisplay = () => {\n  if (!statusPauseEl) {\n    return;\n  }\n  if (state.currentPause) {\n    const minutes = computePauseDurationHelper(state.currentPause, new Date());\n    statusPauseEl.textContent = `${formatPauseLabel(state.currentPause)} \u00B7 ${minutesLabel(minutes)}`;\n  } else {\n    statusPauseEl.textContent = 'No active pause';\n  }\n};\n\nconst startPauseTimer = () => {\n  if (pauseTimer) {\n    return;\n  }\n  pauseTimer = window.setInterval(() => {\n    updatePauseDisplay();\n  }, 1_000);\n  updatePauseDisplay();\n};\n\nconst stopPauseTimer = () => {\n  if (pauseTimer) {\n    clearInterval(pauseTimer);\n    pauseTimer = null;\n  }\n  updatePauseDisplay();\n};\n\nconst applyPauseStateFromUpdate = (pauseState: PauseState) => {\n  state.currentPause = pauseState.current;\n  state.pauseHistory = pauseState.history;\n  if (state.currentPause) {\n    state.sessionState = state.currentPause.kind;\n    startPauseTimer();\n  } else {\n    stopPauseTimer();\n    if (state.sessionId) {\n      state.sessionState = 'active';\n    }\n  }\n  updateStatus();\n};\n\nconst minuteKey = (date: Date) => {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  const hour = String(date.getHours()).padStart(2, '0');\n  const minute = String(date.getMinutes()).padStart(2, '0');\n  return `${year}-${month}-${day}T${hour}:${minute}`;\n};\n\nconst pruneActivityBuckets = () => {\n  const cutoff = new Date();\n  cutoff.setMinutes(cutoff.getMinutes() - ACTIVITY_HISTORY_MINUTES);\n  const cutoffKey = minuteKey(cutoff);\n\n  for (const key of activityBuckets.keys()) {\n    if (key < cutoffKey) {\n      activityBuckets.delete(key);\n    }\n  }\n};\n\nconst getActivitySnapshot = () => {\n  pruneActivityBuckets();\n  const buckets = Array.from(activityBuckets.entries())\n    .map(([key, counts]) => ({\n      minute: key,\n      keys: counts.keys,\n      mouse: counts.mouse\n    }))\n    .sort((a, b) => a.minute.localeCompare(b.minute));\n\n  const aggregated = buckets.reduce(\n    (acc, bucket) => {\n      acc.keys += bucket.keys;\n      acc.mouse += bucket.mouse;\n      return acc;\n    },\n    { keys: 0, mouse: 0 }\n  );\n\n  return { buckets, aggregated };\n};\n\nconst registerActivity = (kind: 'keyboard' | 'mouse') => {\n  const key = minuteKey(new Date());\n  const bucket = activityBuckets.get(key) ?? { keys: 0, mouse: 0 };\n  if (kind === 'keyboard') {\n    bucket.keys += 1;\n  } else {\n    bucket.mouse += 1;\n  }\n  activityBuckets.set(key, bucket);\n};\n\nconst initActivityTracking = () => {\n  window.addEventListener('keydown', () => registerActivity('keyboard'));\n  window.addEventListener('keypress', () => registerActivity('keyboard'));\n  window.addEventListener('mousemove', () => registerActivity('mouse'));\n  window.addEventListener('mousedown', () => registerActivity('mouse'));\n  window.addEventListener('wheel', () => registerActivity('mouse'));\n};\n\nconst updateStatus = () => {\n  if (statusEmailEl) {\n    statusEmailEl.textContent = state.email ?? 'Not logged in';\n  }\n\n  if (statusSessionEl) {\n    const parts: string[] = [];\n    if (!state.sessionId) {\n      parts.push('No active session');\n    } else {\n      parts.push('Active session');\n      if (state.currentPause) {\n        const minutes = computePauseDurationHelper(state.currentPause, new Date());\n        parts.push(`(${formatPauseLabel(state.currentPause)} \u00B7 ${minutesLabel(minutes)})`);\n      } else {\n        const idleFromSystem = state.systemStatus\n          ? state.systemStatus.idleSeconds >= IDLE_THRESHOLD_SECONDS\n          : state.sessionState === 'idle';\n        if (idleFromSystem) {\n          parts.push('(Idle)');\n        }\n      }\n    }\n    statusSessionEl.textContent = parts.join(' ');\n  }\n\n  if (statusHeartbeatEl) {\n    statusHeartbeatEl.textContent = state.lastHeartbeatAt\n      ? state.lastHeartbeatAt.toLocaleTimeString()\n      : 'Never';\n  }\n\n  if (statusForegroundEl) {\n    if (state.systemStatus?.foregroundApp?.title) {\n      const owner = state.systemStatus.foregroundApp.owner;\n      statusForegroundEl.textContent = owner\n        ? `${state.systemStatus.foregroundApp.title} (${owner})`\n        : state.systemStatus.foregroundApp.title;\n    } else {\n      statusForegroundEl.textContent = 'Unknown';\n    }\n  }\n\n  updateControls();\n  updateDiagnostics();\n  updatePauseDisplay();\n};\n\nconst updateControls = () => {\n  buttons.forEach((button) => {\n    const action = button.dataset.action;\n    if (!action) {\n      return;\n    }\n\n    if (action === 'log-in') {\n      button.disabled = false;\n      return;\n    }\n\n    if (action === 'log-out') {\n      button.disabled = !state.token;\n      return;\n    }\n\n    button.disabled = !state.sessionId;\n  });\n};\n\nlet toastTimer: number | null = null;\nconst MAX_CLOCK_SKEW_WARNING_MS = 5 * 60 * 1000;\n\nconst showToast = (message: string, variant: 'info' | 'success' | 'error' = 'info', code?: string, hint?: string) => {\n  if (!toastEl) {\n    return;\n  }\n  const parts = [message];\n  if (hint) {\n    parts.push(`Hint: ${hint}`);\n  }\n  const prefix = code ? `[${code}] ` : '';\n  toastEl.textContent = `${prefix}${parts.join(' \u2013 ')}`;\n  toastEl.dataset.variant = variant;\n  toastEl.dataset.visible = 'true';\n\n  if (toastTimer) {\n    window.clearTimeout(toastTimer);\n  }\n  toastTimer = window.setTimeout(() => {\n    if (toastEl) {\n      toastEl.dataset.visible = 'false';\n    }\n  }, 4000);\n};\n\nconst resolvePresencePrompt = (response: unknown): PresencePrompt | null => {\n  if (!response || typeof response !== 'object') {\n    return null;\n  }\n  const payload = response as Record<string, unknown>;\n  const candidate = payload.presencePrompt ?? payload.prompt;\n  if (!candidate || typeof candidate !== 'object') {\n    return null;\n  }\n  const prompt = candidate as PresencePrompt;\n  if (typeof prompt.id !== 'string' || prompt.id.trim().length === 0) {\n    return null;\n  }\n  if (typeof prompt.expiresAt !== 'string' || prompt.expiresAt.trim().length === 0) {\n    return null;\n  }\n  return prompt;\n};\n\nconst shouldDisplayPresencePrompt = (prompt: PresencePrompt | null) => {\n  if (!prompt) {\n    return false;\n  }\n  if (!prompt.id || !prompt.expiresAt) {\n    return false;\n  }\n  if (activePromptId === prompt.id && presenceModal?.dataset.visible === 'true') {\n    return false;\n  }\n  return true;\n};\n\nconst presencePayload = (prompt: PresencePrompt) => ({\n  id: prompt.id,\n  expiresAt: prompt.expiresAt,\n  message: prompt.message ?? undefined\n});\n\nconst requestPresencePopup = (prompt: PresencePrompt) => {\n  if (!isPopupModeEnabled()) {\n    return;\n  }\n  window.attendance.openPresencePrompt(presencePayload(prompt));\n};\n\nfunction updateDiagnostics() {\n  if (!diagnosticsPanel || !diagnosticsContentEl) {\n    return;\n  }\n\n  const shouldShow = Boolean(state.token || state.sessionId || state.user);\n  diagnosticsPanel.hidden = !shouldShow;\n  if (!shouldShow) {\n    diagnosticsContentEl.textContent = '';\n    return;\n  }\n\n  const lines: string[] = [\n    `localTime: ${new Date().toLocaleString()}`,\n    `sessionId: ${state.sessionId ?? 'none'}`,\n    `sessionState: ${state.sessionState}`,\n    `userId: ${state.user?.id ?? 'unknown'}`,\n    `role: ${state.user?.role ?? 'unknown'}`,\n    `tokenScope: ${state.tokenScope ?? 'n/a'}`,\n    `tokenExpires: ${state.tokenExpiresAt ? state.tokenExpiresAt.toLocaleString() : 'n/a'}`,\n    `lastReqId: ${state.lastRequestTrace?.requestId ?? 'n/a'}`,\n    `lastReqStatus: ${state.lastRequestTrace?.status ?? 'n/a'}`,\n    `clockSkewMs: ${state.lastServerSkewMs ?? 'n/a'}`\n  ];\n\n  diagnosticsContentEl.textContent = lines.join('\\n');\n}\n\nfunction processServerDateHeader(dateHeader: string | null, requestId: string) {\n  if (!dateHeader) {\n    return;\n  }\n  const parsed = new Date(dateHeader);\n  if (Number.isNaN(parsed.getTime())) {\n    return;\n  }\n  const skewMs = Math.abs(parsed.getTime() - Date.now());\n  state.lastServerSkewMs = skewMs;\n  state.lastServerDate = parsed;\n  if (skewMs > MAX_CLOCK_SKEW_WARNING_MS) {\n    console.warn('[diagnostics]', {\n      type: 'clock_skew',\n      skewMs,\n      thresholdMs: MAX_CLOCK_SKEW_WARNING_MS,\n      requestId,\n      serverDate: parsed.toISOString()\n    });\n  }\n  updateDiagnostics();\n}\n\nfunction recordRequestTrace(trace: { requestId: string; url: string; status: number }) {\n  state.lastRequestTrace = trace;\n  updateDiagnostics();\n}\n\nfunction parseApiError(error: unknown): { message: string; code?: string; hint?: string } {\n  if (error instanceof ApiError) {\n    const body = error.body as Record<string, unknown> | undefined;\n    if (body && typeof body === 'object') {\n      const code = typeof body.code === 'string' ? body.code : typeof body.error === 'string' ? body.error : undefined;\n      const message = typeof body.error === 'string' ? body.error : error.message;\n      const hint = typeof body.hint === 'string' ? body.hint : undefined;\n      return { message, code, hint };\n    }\n    return { message: error.message, code: error.status ? String(error.status) : undefined };\n  }\n  if (error instanceof Error) {\n    return { message: error.message };\n  }\n  return { message: 'Unknown failure' };\n}\n\nconst renderRequests = () => {\n  if (!requestsListEl || !requestsEmptyEl) {\n    return;\n  }\n\n  requestsListEl.innerHTML = '';\n\n  if (!state.requests || state.requests.length === 0) {\n    requestsEmptyEl.style.display = 'block';\n    return;\n  }\n\n  requestsEmptyEl.style.display = 'none';\n\n  state.requests\n    .slice()\n    .sort((a, b) => {\n      const aDate = a.createdAt ?? a.startDate;\n      const bDate = b.createdAt ?? b.startDate;\n      return (bDate ?? '').localeCompare(aDate ?? '');\n    })\n    .forEach((request) => {\n      const item = document.createElement('li');\n      item.className = 'requests__item';\n\n      const title = document.createElement('strong');\n      title.textContent = `${request.type} \u2022 ${formatDateRange(request.startDate, request.endDate)}`;\n      item.appendChild(title);\n\n      const hours = document.createElement('span');\n      hours.textContent = `Hours: ${request.hours}`;\n      item.appendChild(hours);\n\n      if (request.reason) {\n        const reason = document.createElement('span');\n        reason.textContent = `Reason: ${request.reason}`;\n        item.appendChild(reason);\n      }\n\n      const status = document.createElement('span');\n      status.className = 'requests__status';\n      status.textContent = `Status: ${request.status ?? 'pending'}`;\n      item.appendChild(status);\n\n      requestsListEl.appendChild(item);\n    });\n};\n\nconst formatDateRange = (start: string, end?: string | null) => {\n  if (!end || end === start) {\n    return start;\n  }\n  return `${start} \u2192 ${end}`;\n};\n\nconst isoDateOnly = (value: string) => value.slice(0, 10);\nconst isoMonthOnly = (value: string) => value.slice(0, 7);\nconst minutesToHours = (minutes: number) => Math.round((minutes / 60) * 100) / 100;\nconst formatHours = (hours: number) => (Number.isInteger(hours) ? hours.toFixed(0) : hours.toFixed(2));\nconst formatLocalDate = (iso: string) => {\n  const parsed = new Date(iso);\n  if (Number.isNaN(parsed.getTime())) {\n    return iso;\n  }\n  return parsed.toLocaleDateString(undefined, { month: 'short', day: 'numeric', year: 'numeric' });\n};\nconst formatStatus = (value: string) => (value ? `${value.charAt(0).toUpperCase()}${value.slice(1)}` : value);\n\nconst updateTimesheetInputVisibility = (view: TimesheetView) => {\n  const showMonth = view === 'monthly';\n  if (timesheetDateGroup) {\n    timesheetDateGroup.classList.toggle('hidden', showMonth);\n  }\n  if (timesheetMonthGroup) {\n    timesheetMonthGroup.classList.toggle('hidden', !showMonth);\n  }\n};\n\nconst ensureTimesheetFormDefaults = () => {\n  if (!timesheetViewSelect) {\n    return;\n  }\n  const view = state.timesheetView ?? 'pay_period';\n  timesheetViewSelect.value = view;\n  updateTimesheetInputVisibility(view);\n  const todayIso = new Date().toISOString();\n  if (view === 'monthly') {\n    if (timesheetMonthInput) {\n      timesheetMonthInput.value = state.timesheetReference ?? isoMonthOnly(todayIso);\n    }\n    if (timesheetDateInput) {\n      timesheetDateInput.value = '';\n    }\n  } else {\n    if (timesheetDateInput) {\n      timesheetDateInput.value = state.timesheetReference ?? isoDateOnly(todayIso);\n    }\n    if (timesheetMonthInput) {\n      timesheetMonthInput.value = '';\n    }\n  }\n};\n\nconst toggleTimesheetEditModal = (visible: boolean) => {\n  if (!timesheetEditModal) {\n    return;\n  }\n  timesheetEditModal.dataset.visible = visible ? 'true' : 'false';\n  if (visible) {\n    if (timesheetEditReasonInput) {\n      timesheetEditReasonInput.value = '';\n    }\n    if (timesheetEditHoursInput) {\n      timesheetEditHoursInput.value = '';\n    }\n    if (timesheetEditErrorEl) {\n      timesheetEditErrorEl.textContent = '';\n    }\n    if (timesheetEditSuccessEl) {\n      timesheetEditSuccessEl.textContent = '';\n    }\n  } else {\n    pendingTimesheetEdit = null;\n    if (timesheetEditErrorEl) {\n      timesheetEditErrorEl.textContent = '';\n    }\n    if (timesheetEditSuccessEl) {\n      timesheetEditSuccessEl.textContent = '';\n    }\n  }\n};\n\nconst renderTimesheetRequests = (summary: TimesheetSummary | null) => {\n  if (!timesheetRequestsSection || !timesheetRequestsList || !timesheetRequestsEmpty) {\n    return;\n  }\n\n  if (!summary) {\n    timesheetRequestsSection.style.display = 'none';\n    timesheetRequestsList.innerHTML = '';\n    timesheetRequestsEmpty.style.display = 'block';\n    return;\n  }\n\n  timesheetRequestsSection.style.display = 'block';\n\n  if (!summary.editRequests.length) {\n    timesheetRequestsList.innerHTML = '';\n    timesheetRequestsEmpty.style.display = 'block';\n    return;\n  }\n\n  timesheetRequestsEmpty.style.display = 'none';\n  timesheetRequestsList.innerHTML = '';\n\n  summary.editRequests\n    .slice()\n    .sort((a, b) => b.createdAt.localeCompare(a.createdAt))\n    .forEach((request) => {\n      const item = document.createElement('li');\n      item.className = 'timesheet__request-item';\n\n      const title = document.createElement('strong');\n      title.textContent = `${formatLocalDate(request.targetDate)} \u2022 ${formatStatus(request.status)}`;\n      item.appendChild(title);\n\n      const reason = document.createElement('p');\n      reason.textContent = request.reason;\n      item.appendChild(reason);\n\n      const meta = document.createElement('div');\n      meta.className = 'timesheet__request-meta';\n\n      const statusEl = document.createElement('span');\n      statusEl.className = `timesheet__request-status ${request.status}`;\n      statusEl.textContent = formatStatus(request.status);\n      meta.appendChild(statusEl);\n\n      const createdEl = document.createElement('span');\n      createdEl.textContent = `Requested ${formatLocalDate(request.createdAt)}`;\n      meta.appendChild(createdEl);\n\n      if (request.reviewedAt) {\n        const reviewedEl = document.createElement('span');\n        reviewedEl.textContent = `Reviewed ${formatLocalDate(request.reviewedAt)}`;\n        meta.appendChild(reviewedEl);\n      }\n\n      if (request.requestedMinutes && request.requestedMinutes > 0) {\n        const requestedHours = formatHours(minutesToHours(request.requestedMinutes));\n        const requestedEl = document.createElement('span');\n        requestedEl.textContent = `Requested hours: ${requestedHours}`;\n        meta.appendChild(requestedEl);\n      }\n\n      if (request.adminNote) {\n        const noteEl = document.createElement('span');\n        noteEl.textContent = `Admin note: ${request.adminNote}`;\n        meta.appendChild(noteEl);\n      }\n\n      item.appendChild(meta);\n      timesheetRequestsList.appendChild(item);\n    });\n};\n\nconst renderTimesheet = () => {\n  if (!timesheetSummaryEl || !timesheetEmptyEl || !timesheetTableBody || !timesheetLoadingEl) {\n    return;\n  }\n\n  const loading = state.timesheetLoading;\n  const summary = state.timesheet;\n\n  timesheetLoadingEl.hidden = !loading;\n\n  if (loading) {\n    timesheetSummaryEl.innerHTML = '';\n    timesheetTableBody.innerHTML = '';\n    if (timesheetEmptyEl) {\n      timesheetEmptyEl.style.display = 'none';\n    }\n    if (timesheetTable) {\n      timesheetTable.style.display = 'none';\n    }\n    renderTimesheetRequests(summary);\n    return;\n  }\n\n  if (!summary) {\n    timesheetSummaryEl.innerHTML = '';\n    timesheetTableBody.innerHTML = '';\n    if (timesheetEmptyEl) {\n      timesheetEmptyEl.style.display = 'block';\n      timesheetEmptyEl.textContent = 'No activity recorded for this range.';\n    }\n    if (timesheetTable) {\n      timesheetTable.style.display = 'none';\n    }\n    renderTimesheetRequests(summary);\n    return;\n  }\n\n  const summaryCards = [\n    `<div class=\"timesheet__summary-item\"><span>Range</span><strong>${summary.label}</strong><small>${state.timesheetTimezone ?? ''}</small></div>`,\n    `<div class=\"timesheet__summary-item\"><span>Active Hours</span><strong>${formatHours(summary.totals.activeHours)}</strong><small>${summary.totals.activeMinutes} min</small></div>`,\n    `<div class=\"timesheet__summary-item\"><span>Idle Hours</span><strong>${formatHours(summary.totals.idleHours)}</strong><small>${summary.totals.idleMinutes} min</small></div>`,\n    `<div class=\"timesheet__summary-item\"><span>Breaks</span><strong>${summary.totals.breaks}</strong></div>`,\n    `<div class=\"timesheet__summary-item\"><span>Lunches</span><strong>${summary.totals.lunches}</strong></div>`,\n    `<div class=\"timesheet__summary-item\"><span>Presence Misses</span><strong>${summary.totals.presenceMisses}</strong></div>`\n  ];\n  timesheetSummaryEl.innerHTML = summaryCards.join('');\n\n  if (timesheetTable) {\n    timesheetTable.style.display = summary.days.length ? 'table' : 'none';\n  }\n  if (timesheetEmptyEl) {\n    timesheetEmptyEl.style.display = summary.days.length ? 'none' : 'block';\n  }\n\n  timesheetTableBody.innerHTML = '';\n  summary.days.forEach((day) => {\n    const row = document.createElement('tr');\n\n    const dateCell = document.createElement('td');\n    dateCell.textContent = day.label;\n    row.appendChild(dateCell);\n\n    const activeCell = document.createElement('td');\n    activeCell.textContent = formatHours(minutesToHours(day.activeMinutes));\n    row.appendChild(activeCell);\n\n    const idleCell = document.createElement('td');\n    idleCell.textContent = formatHours(minutesToHours(day.idleMinutes));\n    row.appendChild(idleCell);\n\n    const breaksCell = document.createElement('td');\n    breaksCell.textContent = String(day.breaks);\n    row.appendChild(breaksCell);\n\n    const lunchesCell = document.createElement('td');\n    lunchesCell.textContent = String(day.lunches);\n    row.appendChild(lunchesCell);\n\n    const presenceCell = document.createElement('td');\n    presenceCell.textContent = String(day.presenceMisses);\n    row.appendChild(presenceCell);\n\n    const actionCell = document.createElement('td');\n    actionCell.className = 'timesheet__action';\n    const hasPending = day.editRequests.some((req) => req.status === 'pending');\n    const actionButton = document.createElement('button');\n    actionButton.type = 'button';\n    actionButton.dataset.action = 'timesheet-request-edit';\n    actionButton.dataset.date = day.date;\n    actionButton.dataset.label = day.label;\n    actionButton.textContent = hasPending ? 'Pending' : 'Request Edit';\n    actionButton.disabled = hasPending;\n    actionCell.appendChild(actionButton);\n\n    if (day.editRequests.length) {\n      const note = document.createElement('div');\n      note.className = 'timesheet__day-note';\n      note.textContent = day.editRequests\n        .map((req) => `${formatStatus(req.status)} \u2022 ${formatLocalDate(req.createdAt)}`)\n        .join(', ');\n      actionCell.appendChild(note);\n    }\n\n    row.appendChild(actionCell);\n    timesheetTableBody.appendChild(row);\n  });\n\n  renderTimesheetRequests(summary);\n};\n\nconst toggleTimesheetModal = (visible: boolean) => {\n  if (!timesheetModal) {\n    return;\n  }\n  timesheetModal.dataset.visible = visible ? 'true' : 'false';\n  if (visible) {\n    ensureTimesheetFormDefaults();\n    renderTimesheet();\n    void fetchTimesheet({\n      view: (timesheetViewSelect?.value as TimesheetView | undefined) ?? state.timesheetView,\n      date: timesheetDateInput?.value || undefined,\n      month: timesheetMonthInput?.value || undefined,\n      silent: Boolean(state.timesheet)\n    });\n  } else {\n    toggleTimesheetEditModal(false);\n  }\n};\n\nconst openTimesheetEditRequest = (date: string, label: string) => {\n  if (!state.timesheet) {\n    return;\n  }\n  pendingTimesheetEdit = { date, label };\n  if (timesheetEditDateLabel) {\n    timesheetEditDateLabel.textContent = `Request change for ${label}`;\n  }\n  toggleTimesheetEditModal(true);\n};\n\nconst getTimesheetRequestValues = () => {\n  const view = (timesheetViewSelect?.value as TimesheetView | undefined) ?? state.timesheetView;\n  const dateValue = timesheetDateInput?.value?.trim();\n  const monthValue = timesheetMonthInput?.value?.trim();\n  return {\n    view,\n    date: view === 'monthly' ? null : dateValue && dateValue.length ? dateValue : state.timesheetReference,\n    month: view === 'monthly' ? (monthValue && monthValue.length ? monthValue : state.timesheetReference) : null\n  };\n};\n\nconst fetchTimesheet = async (options?: { view?: TimesheetView; date?: string | null; month?: string | null; silent?: boolean }) => {\n  const ensureAuth = state.token ? true : await ensureAuthenticated();\n  if (!ensureAuth) {\n    return;\n  }\n\n  const requestValues = options ?? getTimesheetRequestValues();\n  const view = requestValues.view ?? state.timesheetView ?? 'pay_period';\n  const isMonthly = view === 'monthly';\n  let dateParam = isMonthly ? null : (requestValues.date ?? undefined);\n  let monthParam = isMonthly ? (requestValues.month ?? undefined) : null;\n\n  const todayIso = new Date().toISOString();\n  if (isMonthly && (!monthParam || monthParam.length === 0)) {\n    monthParam = state.timesheetReference ?? isoMonthOnly(todayIso);\n  }\n  if (!isMonthly && (!dateParam || dateParam.length === 0)) {\n    dateParam = state.timesheetReference ?? isoDateOnly(todayIso);\n  }\n\n  state.timesheetLoading = !options?.silent;\n  renderTimesheet();\n\n  const params = new URLSearchParams({ view });\n  if (isMonthly) {\n    params.set('month', monthParam!);\n  } else if (dateParam) {\n    params.set('date', dateParam);\n  }\n\n  const result = await sendOrQueue<{ timezone?: string; timesheet?: TimesheetSummary; view?: TimesheetView; userId?: number }>({\n    path: `/api/timesheets?${params.toString()}`,\n    method: 'GET',\n    requiresAuth: true,\n    description: 'Fetch Timesheet'\n  });\n\n  state.timesheetLoading = false;\n\n  if (result.ok) {\n    const payload = result.data ?? {};\n    const summary = (payload && (payload as { timesheet?: TimesheetSummary }).timesheet) || (payload as TimesheetSummary);\n    state.timesheet = summary ?? null;\n    state.timesheetView = view;\n    state.timesheetReference = isMonthly ? monthParam ?? null : dateParam ?? null;\n    state.timesheetTimezone = (payload && (payload as { timezone?: string }).timezone) ?? state.timesheetTimezone;\n\n    if (timesheetViewSelect) {\n      timesheetViewSelect.value = view;\n      updateTimesheetInputVisibility(view);\n    }\n    if (isMonthly) {\n      if (timesheetMonthInput) {\n        timesheetMonthInput.value = monthParam ?? (summary ? isoMonthOnly(summary.rangeStart) : '');\n      }\n      if (timesheetDateInput) {\n        timesheetDateInput.value = '';\n      }\n    } else if (timesheetDateInput) {\n      timesheetDateInput.value = dateParam ?? (summary ? isoDateOnly(summary.rangeStart) : '');\n    }\n\n    renderTimesheet();\n  } else if (result.queued) {\n    showToast('Offline: timesheet request queued.', 'info');\n  } else {\n    const parsed = parseApiError(result.error);\n    showToast(`Unable to load timesheet: ${parsed.message}`, 'error', parsed.code, parsed.hint);\n    renderTimesheet();\n  }\n};\n\nconst toggleLoginModal = (visible: boolean) => {\n  if (!loginModal) {\n    return;\n  }\n  loginModal.dataset.visible = visible ? 'true' : 'false';\n  if (!visible) {\n    if (loginErrorEl) {\n      loginErrorEl.textContent = '';\n    }\n    const submitButton = loginForm?.querySelector('button[type=\"submit\"]') as HTMLButtonElement | null;\n    submitButton?.removeAttribute('disabled');\n  }\n};\n\nconst togglePresenceModal = (visible: boolean) => {\n  if (!presenceModal) {\n    return;\n  }\n  presenceModal.dataset.visible = visible ? 'true' : 'false';\n  if (visible) {\n    if (presenceConfirmBtn) {\n      presenceConfirmBtn.disabled = false;\n    }\n    if (presenceDismissBtn) {\n      presenceDismissBtn.disabled = false;\n    }\n  }\n};\n\nconst toggleSettingsModal = (visible: boolean) => {\n  if (!settingsModal) {\n    return;\n  }\n  settingsModal.dataset.visible = visible ? 'true' : 'false';\n  if (!visible) {\n    if (settingsErrorEl) {\n      settingsErrorEl.textContent = '';\n    }\n    if (settingsSuccessEl) {\n      settingsSuccessEl.textContent = '';\n    }\n  }\n};\n\nconst resetRequestForm = () => {\n  requestForm?.reset();\n  if (requestSuccessEl) {\n    requestSuccessEl.textContent = '';\n  }\n  if (requestErrorEl) {\n    requestErrorEl.textContent = '';\n  }\n};\n\nconst toggleRequestModal = (visible: boolean) => {\n  if (!requestModal) {\n    return;\n  }\n  requestModal.dataset.visible = visible ? 'true' : 'false';\n  if (visible) {\n    if (requestSuccessEl) {\n      requestSuccessEl.textContent = '';\n    }\n    if (requestErrorEl) {\n      requestErrorEl.textContent = '';\n    }\n  } else {\n    resetRequestForm();\n  }\n};\n\nconst fetchSystemStatus = async (): Promise<SystemStatus | null> => {\n  try {\n    const status = await window.attendance.getSystemStatus();\n    state.systemStatus = status;\n    return status;\n  } catch (error) {\n    console.warn('Failed to fetch system status', error);\n    return state.systemStatus;\n  } finally {\n    updateStatus();\n  }\n};\n\nconst buildHeartbeatPayload = (status: SystemStatus | null) => {\n  if (!state.sessionId) {\n    throw new Error('Cannot build heartbeat payload without session');\n  }\n\n  const { buckets, aggregated } = getActivitySnapshot();\n  const idleSeconds = status?.idleSeconds ?? Number.POSITIVE_INFINITY;\n  const isIdle = idleSeconds >= IDLE_THRESHOLD_SECONDS;\n  const activeMinute = idleSeconds < 60;\n\n  return {\n    sessionId: state.sessionId,\n    timestamp: new Date().toISOString(),\n    idleFlag: isIdle,\n    idleSeconds: Number.isFinite(idleSeconds) ? idleSeconds : null,\n    activeMinute,\n    keysCount: aggregated.keys,\n    mouseCount: aggregated.mouse,\n    activityBuckets: buckets,\n    foregroundAppTitle: status?.foregroundApp?.title ?? null,\n    foregroundAppOwner: status?.foregroundApp?.owner ?? null\n  };\n};\n\nconst shouldQueue = (error: unknown) => {\n  if (error instanceof ApiError) {\n    if (typeof error.status === 'number') {\n      return error.status >= 500 || error.status === 429;\n    }\n    return true;\n  }\n  return true;\n};\n\nconst refreshAuthToken = async () => {\n  if (!state.refreshToken) {\n    throw new Error('missing_refresh_token');\n  }\n  if (!refreshInFlight) {\n    refreshInFlight = (async () => {\n      const response = await apiClient.request<AuthTokens>({\n        path: '/api/sessions/refresh',\n        body: { refreshToken: state.refreshToken },\n        requiresAuth: false,\n        description: 'Refresh Access Token'\n      });\n      applyAuthTokens(response);\n    })().finally(() => {\n      refreshInFlight = null;\n    });\n  }\n  await refreshInFlight;\n};\n\nconst tryRefreshAuthToken = async () => {\n  try {\n    await refreshAuthToken();\n    return true;\n  } catch (error) {\n    console.warn('Token refresh failed', error);\n    return false;\n  }\n};\n\nconst sendOrQueueCore = async <T = unknown>(request: ApiRequest<T>) => {\n  const execute = () => apiClient.request(request);\n\n  try {\n    const data = await execute();\n    return { ok: true as const, data };\n  } catch (error) {\n    let finalError: unknown = error;\n\n    if (error instanceof ApiError && error.status === 401) {\n      const refreshed = await tryRefreshAuthToken();\n      if (refreshed) {\n        try {\n          const data = await execute();\n          return { ok: true as const, data };\n        } catch (retryError) {\n          finalError = retryError;\n        }\n      }\n\n      clearAuth();\n      return { ok: false as const, queued: false as const, error: finalError };\n    }\n\n    if (shouldQueue(finalError)) {\n      console.warn(`[Queue] ${request.description ?? request.path} queued`, finalError);\n      offlineQueue.enqueue({ ...request });\n      return { ok: false as const, queued: true as const, error: finalError };\n    }\n\n    return { ok: false as const, queued: false as const, error: finalError };\n  }\n};\n\nlet sendOrQueueHandler: typeof sendOrQueueCore = sendOrQueueCore;\n\nconst sendOrQueue = async <T = unknown>(request: ApiRequest<T>) => sendOrQueueHandler(request);\n\nconst setSendOrQueueHandler = (handler: typeof sendOrQueueCore) => {\n  sendOrQueueHandler = handler;\n};\n\nconst resetSendOrQueueHandler = () => {\n  sendOrQueueHandler = sendOrQueueCore;\n};\n\nconst ensureAuthenticated = async (): Promise<boolean> => {\n  if (state.token) {\n    return true;\n  }\n\n  return new Promise<boolean>((resolve) => {\n    if (!loginModal || !loginForm || !loginCancelBtn) {\n      resolve(false);\n      return;\n    }\n\n    let resolved = false;\n\n    const setError = (message: string) => {\n      if (loginErrorEl) {\n        loginErrorEl.textContent = message;\n      }\n    };\n\n    const cleanup = () => {\n      loginForm.removeEventListener('submit', submitHandler);\n      loginCancelBtn.removeEventListener('click', cancelHandler);\n    };\n\n    const submitHandler = async (event: SubmitEvent) => {\n      event.preventDefault();\n      const formData = new FormData(loginForm);\n      const email = String(formData.get('email') ?? '').trim().toLowerCase();\n      const deviceId = getDeviceId();\n\n      if (!email) {\n        setError('Enter your work email.');\n        return;\n      }\n\n      const submitButton = loginForm.querySelector('button[type=\"submit\"]') as HTMLButtonElement | null;\n      submitButton?.setAttribute('disabled', 'true');\n      setError('');\n\n      console.info('[ui]', { event: 'login_submit', email, deviceId });\n\n      try {\n        const response = await apiClient.request<AuthTokens>({\n          path: '/api/sessions/start',\n          body: {\n            flow: 'email_only',\n            email,\n            ...(deviceId ? { deviceId } : {})\n          },\n          requiresAuth: false,\n          description: 'Email Sign-In'\n        });\n\n        applyAuthTokens(response);\n        state.email = email;\n        await fetchCurrentUser();\n        updateStatus();\n        toggleLoginModal(false);\n        cleanup();\n        loginForm.reset();\n        if (loginEmailInput) {\n          loginEmailInput.value = email;\n        }\n        resolved = true;\n        window.attendance.logAction('Logged in');\n        await fetchRequests();\n        showToast('Logged in successfully', 'success');\n        console.info('[ui]', { event: 'login_success', email });\n        resolve(true);\n      } catch (error) {\n        const message =\n          error instanceof ApiError && error.status === 401\n            ? 'We could not verify that email. Check with your manager.'\n            : error instanceof ApiError\n            ? error.message\n            : 'Sign-in failed. Please try again.';\n        setError(message);\n        const parsed = parseApiError(error);\n        showToast(`Login failed: ${parsed.message}`, 'error', parsed.code, parsed.hint);\n        submitButton?.removeAttribute('disabled');\n      }\n    };\n\n    const cancelHandler = () => {\n      toggleLoginModal(false);\n      cleanup();\n      if (!resolved) {\n        resolved = true;\n        resolve(false);\n      }\n    };\n\n    loginForm.addEventListener('submit', submitHandler);\n    loginCancelBtn.addEventListener('click', cancelHandler, { once: true });\n\n    const observer = new MutationObserver(() => {\n      if (loginModal.dataset.visible !== 'true') {\n        observer.disconnect();\n        cleanup();\n        if (!resolved) {\n          resolved = true;\n          resolve(Boolean(state.token));\n        }\n      }\n    });\n    observer.observe(loginModal, { attributes: true, attributeFilter: ['data-visible'] });\n\n    if (loginEmailInput) {\n      loginEmailInput.value = state.email ?? loginEmailInput.value ?? '';\n    }\n    setError('');\n    toggleLoginModal(true);\n    loginEmailInput?.focus();\n  });\n};\n\nconst startSession = async () => {\n  if (!state.bootstrap) {\n    throw new Error('Application not initialized');\n  }\n\n  if (!state.token) {\n    const authenticated = await ensureAuthenticated();\n    if (!authenticated) {\n      return;\n    }\n  }\n\n  if (state.sessionId) {\n    return;\n  }\n\n  if (!state.email) {\n    const authenticated = await ensureAuthenticated();\n    if (!authenticated || !state.email) {\n      console.warn('No employee email available to start session');\n      return;\n    }\n  }\n\n  try {\n    const response = await apiClient.request<{ sessionId?: string; id?: string }>({\n      path: '/api/sessions/start',\n      body: {\n        email: state.email,\n        deviceId: state.bootstrap.deviceId,\n        platform: state.bootstrap.platform\n      },\n      requiresAuth: true,\n      description: 'Start Session'\n    });\n\n    const sessionId = response.sessionId ?? response.id;\n    if (!sessionId) {\n      throw new ApiError('Session ID missing in response');\n    }\n\n    state.sessionId = sessionId;\n    state.sessionState = 'active';\n    state.lastHeartbeatAt = null;\n    updateStatus();\n    await hydratePauseState();\n    startHeartbeatLoop();\n    void offlineQueue.process();\n    void fetchRequests();\n    window.attendance.logAction('Session started');\n    showToast('Session started', 'success');\n    console.info('[ui]', { event: 'session_started', sessionId });\n  } catch (error) {\n    const message = error instanceof ApiError ? error.message : 'Unable to start session';\n    console.error(message, error);\n    const parsed = parseApiError(error);\n    showToast(`Unable to start session: ${parsed.message}`, 'error', parsed.code, parsed.hint);\n  }\n};\n\nconst stopSessionLocally = () => {\n  state.sessionId = null;\n  state.sessionState = 'inactive';\n  state.lastHeartbeatAt = null;\n  state.currentPause = null;\n  state.pauseHistory = [];\n  stopPauseTimer();\n  updateStatus();\n  stopHeartbeatLoop();\n};\n\nconst clearAuth = () => {\n  state.token = null;\n  state.refreshToken = null;\n  state.tokenExpiresAt = null;\n  state.tokenScope = null;\n  apiClient.setToken(null);\n  state.requests = [];\n  state.user = null;\n  state.lastRequestTrace = null;\n  state.lastServerSkewMs = null;\n  state.lastServerDate = null;\n  state.currentPause = null;\n  state.pauseHistory = [];\n  stopPauseTimer();\n  renderRequests();\n  updateStatus();\n};\n\nconst endSession = async () => {\n  if (!state.sessionId) {\n    return;\n  }\n\n  const request: ApiRequest = {\n    path: '/api/sessions/end',\n    body: { sessionId: state.sessionId },\n    description: 'End Session'\n  };\n\n  const result = await sendOrQueue(request);\n  if (!result.ok && !result.queued) {\n    console.error('Failed to end session', result.error);\n    const parsed = parseApiError(result.error);\n    showToast(`End session failed: ${parsed.message}`, 'error', parsed.code, parsed.hint);\n    return;\n  }\n\n  stopSessionLocally();\n  clearAuth();\n  window.attendance.logAction('Session ended');\n  showToast('Session ended', 'success');\n};\n\nconst startHeartbeatLoop = () => {\n  if (heartbeatTimer) {\n    return;\n  }\n  heartbeatTimer = window.setInterval(() => {\n    void sendHeartbeat();\n  }, HEARTBEAT_INTERVAL_MS);\n  void sendHeartbeat();\n};\n\nconst stopHeartbeatLoop = () => {\n  if (heartbeatTimer) {\n    clearInterval(heartbeatTimer);\n    heartbeatTimer = null;\n  }\n};\n\nconst sendHeartbeat = async () => {\n  if (!state.sessionId) {\n    return;\n  }\n\n  const status = await fetchSystemStatus();\n  const payload = buildHeartbeatPayload(status);\n\n  const request: ApiRequest<{ prompt?: PresencePrompt | null }> = {\n    path: '/api/events/heartbeat',\n    body: payload,\n    description: 'Heartbeat'\n  };\n\n  const result = await sendOrQueue(request);\n  if (!result.ok) {\n    if (!result.queued) {\n      console.warn('Heartbeat failed', result.error);\n    }\n    return;\n  }\n\n  state.lastHeartbeatAt = new Date();\n  if (state.sessionState !== 'break' && state.sessionState !== 'lunch') {\n    state.sessionState = payload.idleFlag ? 'idle' : 'active';\n  }\n  updateStatus();\n\n  const response = result.data;\n  const prompt = resolvePresencePrompt(response);\n  if (prompt && shouldDisplayPresencePrompt(prompt)) {\n    showPresencePrompt(prompt);\n  }\n};\n\nconst hydratePauseState = async () => {\n  if (!state.sessionId) {\n    state.currentPause = null;\n    state.pauseHistory = [];\n    stopPauseTimer();\n    updatePauseDisplay();\n    return;\n  }\n\n  try {\n    const response = await apiClient.request<{ current: PauseSnapshot | null; history: PauseSnapshot[] } | null>({\n      path: `/api/sessions/${state.sessionId}/pauses`,\n      method: 'GET',\n      requiresAuth: true,\n      description: 'Load Session Pauses',\n      transform: (data) => parsePauseStateResponse(data)\n    });\n\n    if (!response) {\n      applyPauseStateFromUpdate({ current: null, history: [] });\n      return;\n    }\n\n    const pauseState = buildPauseState(response, new Date());\n    applyPauseStateFromUpdate(pauseState);\n  } catch (error) {\n    console.warn('Failed to load session pauses', error);\n  }\n};\n\nconst fetchRequests = async () => {\n  if (!state.token) {\n    return;\n  }\n\n  const result = await sendOrQueue<{ requests?: TimeRequest[] } | TimeRequest[]>({\n    path: '/api/time-requests/my',\n    method: 'GET',\n    requiresAuth: true,\n    description: 'Fetch Time Requests'\n  });\n\n  if (result.ok) {\n    const response = result.data;\n    const requests = Array.isArray(response) ? response : response?.requests ?? [];\n    state.requests = requests;\n    renderRequests();\n  } else if (!result.queued) {\n    console.warn('Unable to fetch requests', result.error);\n    const parsed = parseApiError(result.error);\n    showToast(`Unable to fetch requests: ${parsed.message}`, 'error', parsed.code, parsed.hint);\n  }\n};\n\nconst fetchCurrentUser = async () => {\n  if (!state.token) {\n    return;\n  }\n\n  const result = await sendOrQueue<{ user?: { id: number; email: string; name?: string; role?: string } }>({\n    path: '/api/me',\n    method: 'GET',\n    requiresAuth: true,\n    description: 'Fetch Current User'\n  });\n\n  if (result.ok) {\n    const payload = result.data;\n    if (payload && typeof payload === 'object' && 'user' in payload) {\n      state.user = (payload as { user?: { id: number; email: string; name?: string; role?: string } }).user ?? null;\n      updateStatus();\n    }\n  } else if (!result.queued) {\n    console.warn('Unable to fetch current user', result.error);\n    const parsed = parseApiError(result.error);\n    showToast(`Unable to fetch user: ${parsed.message}`, 'error', parsed.code, parsed.hint);\n  }\n};\n\nconst submitRequest = async () => {\n  if (!requestForm || !state.bootstrap) {\n    return;\n  }\n\n  if (!state.token) {\n    const authenticated = await ensureAuthenticated();\n    if (!authenticated) {\n      if (requestErrorEl) {\n        requestErrorEl.textContent = 'Log in to submit a request.';\n      }\n      return;\n    }\n  }\n\n  if (!state.email) {\n    if (requestErrorEl) {\n      requestErrorEl.textContent = 'Log in to submit a request.';\n    }\n    return;\n  }\n\n  const type = requestTypeInput?.value ?? '';\n  const startDate = requestStartDateInput?.value ?? '';\n  const endDateRaw = requestEndDateInput?.value ?? '';\n  const hoursValue = requestHoursInput?.value ?? '';\n  const reason = requestReasonInput?.value?.trim() ?? '';\n\n  if (!type || !startDate || !hoursValue || !reason) {\n    if (requestErrorEl) {\n      requestErrorEl.textContent = 'All required fields must be completed.';\n    }\n    return;\n  }\n\n  const hours = Number.parseFloat(hoursValue);\n  if (Number.isNaN(hours) || hours <= 0) {\n    if (requestErrorEl) {\n      requestErrorEl.textContent = 'Hours must be a positive number.';\n    }\n    return;\n  }\n\n  const endDate = endDateRaw ? endDateRaw : null;\n  if (endDate && endDate < startDate) {\n    if (requestErrorEl) {\n      requestErrorEl.textContent = 'End date cannot be before start date.';\n    }\n    return;\n  }\n\n  const payload: Record<string, unknown> = {\n    type,\n    startDate,\n    hours,\n    reason,\n    email: state.email,\n    deviceId: state.bootstrap.deviceId\n  };\n\n  if (endDate) {\n    payload.endDate = endDate;\n  }\n\n  if (requestErrorEl) {\n    requestErrorEl.textContent = '';\n  }\n  if (requestSuccessEl) {\n    requestSuccessEl.textContent = 'Submitting...';\n  }\n\n  const result = await sendOrQueue({\n    path: '/api/time-requests',\n    body: payload,\n    requiresAuth: true,\n    description: 'Submit Time Request'\n  });\n\n  if (result.ok) {\n    if (requestSuccessEl) {\n      requestSuccessEl.textContent = 'Request submitted.';\n    }\n    toggleRequestModal(false);\n    await fetchRequests();\n  } else if (result.queued) {\n    if (requestSuccessEl) {\n      requestSuccessEl.textContent = 'Offline: request queued and will submit automatically.';\n    }\n    return;\n  } else {\n    if (requestErrorEl) {\n      requestErrorEl.textContent = 'Unable to submit request.';\n    }\n  }\n};\n\nconst showPresencePrompt = (prompt: PresencePrompt) => {\n  state.currentPrompt = prompt;\n  activePromptId = prompt.id;\n\n  if (presenceMessageEl) {\n    presenceMessageEl.textContent = prompt.message ?? 'Please confirm your presence.';\n  }\n\n  togglePresenceModal(true);\n\n  if (presenceTimeout) {\n    clearTimeout(presenceTimeout);\n  }\n  presenceTimeout = window.setTimeout(() => {\n    if (activePromptId === prompt.id) {\n      togglePresenceModal(false);\n      window.attendance.closePresencePrompt(prompt.id);\n      state.currentPrompt = null;\n      activePromptId = null;\n    }\n  }, PRESENCE_CONFIRMATION_WINDOW_MS);\n\n  requestPresencePopup(prompt);\n};\n\nconst acknowledgePresencePrompt = async (source: 'overlay' | 'popup') => {\n  if (!state.currentPrompt || !state.sessionId || presenceAckInFlight) {\n    return;\n  }\n\n  const prompt = state.currentPrompt;\n  presenceAckInFlight = true;\n\n  if (presenceTimeout) {\n    clearTimeout(presenceTimeout);\n    presenceTimeout = null;\n  }\n\n  if (source === 'popup') {\n    togglePresenceModal(false);\n  } else if (presenceConfirmBtn) {\n    presenceConfirmBtn.disabled = true;\n  }\n\n  window.attendance.closePresencePrompt(prompt.id);\n\n  const request: ApiRequest = {\n    path: '/api/events/presence/confirm',\n    body: {\n      sessionId: state.sessionId,\n      promptId: prompt.id,\n      timestamp: new Date().toISOString()\n    },\n    description: 'Presence Confirmation'\n  };\n\n  const result = await sendOrQueue(request);\n  presenceAckInFlight = false;\n\n  if (!result.ok && !result.queued) {\n    console.error('Presence confirmation failed', result.error);\n    const parsed = parseApiError(result.error);\n    showToast(`Presence confirmation failed: ${parsed.message}`, 'error', parsed.code, parsed.hint);\n    if (source === 'overlay' && presenceConfirmBtn) {\n      presenceConfirmBtn.disabled = false;\n    }\n    state.currentPrompt = prompt;\n    activePromptId = prompt.id;\n    requestPresencePopup(prompt);\n    togglePresenceModal(true);\n    return;\n  }\n\n  state.currentPrompt = null;\n  activePromptId = null;\n  togglePresenceModal(false);\n  window.attendance.closePresencePrompt(prompt.id);\n};\n\nconst confirmPresence = async () => {\n  await acknowledgePresencePrompt('overlay');\n};\n\nconst requireSessionAndSend = async (path: string, description: string) => {\n  if (!state.token) {\n    const authenticated = await ensureAuthenticated();\n    if (!authenticated) {\n      return;\n    }\n  }\n\n  if (!state.sessionId) {\n    await startSession();\n    if (!state.sessionId) {\n      console.warn('No active session for action');\n      return;\n    }\n  }\n\n  const request: ApiRequest = {\n    path,\n    body: { sessionId: state.sessionId, timestamp: new Date().toISOString() },\n    requiresAuth: path.startsWith('/api/time-requests') ? true : false,\n    description\n  };\n\n  console.info('[ui]', {\n    event: 'api_attempt',\n    description,\n    path,\n    payload: request.body,\n    sessionId: state.sessionId\n  });\n\n  const result = await sendOrQueue(request);\n  if (result.ok) {\n    const payload = typeof result.data === 'object' && result.data !== null ? (result.data as Record<string, unknown>) : undefined;\n    const pausePayload = payload ? parsePausePayload(payload.pause) : undefined;\n    if (pausePayload) {\n      const updatedPauseState = applyPauseUpdate(\n        { current: state.currentPause, history: state.pauseHistory },\n        pausePayload,\n        new Date()\n      );\n      applyPauseStateFromUpdate(updatedPauseState);\n      return;\n    }\n\n    if (path === '/api/events/break/start') {\n      state.sessionState = 'break';\n      updateStatus();\n      return;\n    }\n    if (path === '/api/events/break/end') {\n      state.currentPause = null;\n      stopPauseTimer();\n      state.sessionState = 'active';\n      updateStatus();\n      return;\n    }\n    if (path === '/api/events/lunch/start') {\n      state.sessionState = 'lunch';\n      updateStatus();\n      return;\n    }\n    if (path === '/api/events/lunch/end') {\n      state.currentPause = null;\n      stopPauseTimer();\n      state.sessionState = 'active';\n      updateStatus();\n      return;\n    }\n    return;\n  }\n  if (!result.queued) {\n    console.error(`${description} failed`, result.error);\n    const parsed = parseApiError(result.error);\n    showToast(`${description} failed: ${parsed.message}`, 'error', parsed.code, parsed.hint);\n    return;\n  }\n  showToast(`${description} queued`, 'info');\n};\n\nconst initPresenceHandlers = () => {\n  if (presenceConfirmBtn) {\n    presenceConfirmBtn.addEventListener('click', () => {\n      void confirmPresence();\n    });\n  }\n\n  if (presenceDismissBtn) {\n    presenceDismissBtn.addEventListener('click', () => {\n      togglePresenceModal(false);\n    });\n  }\n\n  window.attendance.onPresenceWindowConfirm((promptId) => {\n    if (!activePromptId || promptId !== activePromptId) {\n      return;\n    }\n    void acknowledgePresencePrompt('popup');\n  });\n\n  window.attendance.onPresenceWindowDismiss((promptId) => {\n    if (activePromptId && promptId === activePromptId) {\n      togglePresenceModal(false);\n    }\n  });\n};\n\nconst initSettingsHandlers = () => {\n  const populate = () => {\n    if (!state.settings) {\n      return;\n    }\n    if (settingsBaseUrlInput) {\n      settingsBaseUrlInput.value = state.settings.serverBaseUrl;\n    }\n    if (settingsEmailInput) {\n      settingsEmailInput.value = state.settings.workEmail ?? '';\n    }\n    if (state.lastHealthSuccess) {\n      state.healthStatus = {\n        state: 'success',\n        baseUrl: state.lastHealthSuccess.baseUrl,\n        version: state.lastHealthSuccess.version,\n        time: state.lastHealthSuccess.time\n      };\n    } else {\n      state.healthStatus = { state: 'idle' };\n    }\n    renderHealthStatus();\n  };\n\n  if (openSettingsBtn) {\n    openSettingsBtn.addEventListener('click', () => {\n      populate();\n      toggleSettingsModal(true);\n    });\n  }\n\n  if (settingsCancelBtn) {\n    settingsCancelBtn.addEventListener('click', () => {\n      toggleSettingsModal(false);\n    });\n  }\n\n  if (settingsTestBtn && settingsBaseUrlInput) {\n    settingsTestBtn.addEventListener('click', async () => {\n      const baseUrlValue = settingsBaseUrlInput.value.trim();\n      if (!baseUrlValue) {\n        if (settingsErrorEl) {\n          settingsErrorEl.textContent = 'Enter a URL to test.';\n        }\n        return;\n      }\n\n      if (settingsErrorEl) {\n        settingsErrorEl.textContent = '';\n        settingsErrorEl.innerHTML = '';\n      }\n\n      state.healthStatus = { state: 'testing', baseUrl: baseUrlValue };\n      renderHealthStatus();\n\n      settingsTestBtn.disabled = true;\n\n      const buildHealthUrl = () => {\n        try {\n          return new URL('/api/health', baseUrlValue).toString();\n        } catch (_error) {\n          return null;\n        }\n      };\n\n      const healthUrl = buildHealthUrl();\n      if (!healthUrl) {\n        state.healthStatus = { state: 'error', baseUrl: baseUrlValue, detail: 'Invalid server URL.' };\n        renderHealthStatus();\n        settingsTestBtn.disabled = false;\n        return;\n      }\n\n      try {\n        const response = await window.fetch(healthUrl, { method: 'GET' });\n        if (!response.ok) {\n          const detail = `HTTP ${response.status}${response.statusText ? ` ${response.statusText}` : ''}`;\n          state.healthStatus = { state: 'error', baseUrl: baseUrlValue, detail };\n          renderHealthStatus();\n          return;\n        }\n\n        const data = (await response.json()) as { ok?: boolean; version?: string; time?: string };\n        if (!data?.ok || typeof data.version !== 'string' || typeof data.time !== 'string') {\n          state.healthStatus = {\n            state: 'error',\n            baseUrl: baseUrlValue,\n            detail: 'Invalid health response.'\n          };\n          renderHealthStatus();\n          return;\n        }\n\n        const parsedTime = new Date(data.time);\n        if (Number.isNaN(parsedTime.getTime())) {\n          state.healthStatus = {\n            state: 'error',\n            baseUrl: baseUrlValue,\n            detail: 'Invalid timestamp in response.'\n          };\n          renderHealthStatus();\n          return;\n        }\n\n        state.healthStatus = {\n          state: 'success',\n          baseUrl: baseUrlValue,\n          version: data.version,\n          time: parsedTime\n        };\n        state.lastHealthSuccess = {\n          baseUrl: baseUrlValue,\n          version: data.version,\n          time: parsedTime\n        };\n        renderHealthStatus();\n      } catch (error) {\n        const detail = error instanceof Error ? `Network error: ${error.message}` : 'Network error.';\n        state.healthStatus = { state: 'error', baseUrl: baseUrlValue, detail };\n        renderHealthStatus();\n      } finally {\n        settingsTestBtn.disabled = false;\n      }\n    });\n  }\n\n  if (settingsForm) {\n    settingsForm.addEventListener('submit', async (event) => {\n      event.preventDefault();\n\n      const baseUrlValue = settingsBaseUrlInput?.value.trim() ?? '';\n      const workEmailValue = settingsEmailInput?.value.trim().toLowerCase() ?? '';\n      if (!baseUrlValue) {\n        if (settingsErrorEl) {\n          settingsErrorEl.textContent = 'Server URL is required.';\n        }\n        return;\n      }\n\n      if (!workEmailValue) {\n        if (settingsErrorEl) {\n          settingsErrorEl.textContent = 'Work email is required.';\n        }\n        return;\n      }\n\n      try {\n        const updatedConfig = await window.attendance.updateSettings({\n          serverBaseUrl: baseUrlValue,\n          workEmail: workEmailValue || null\n        });\n        state.settings = updatedConfig;\n        if (state.bootstrap) {\n          state.bootstrap.baseUrl = updatedConfig.serverBaseUrl;\n        }\n        apiClient.setBaseUrl(updatedConfig.serverBaseUrl);\n        state.email = updatedConfig.workEmail ?? state.email;\n        if (loginEmailInput && updatedConfig.workEmail) {\n          loginEmailInput.value = updatedConfig.workEmail;\n        }\n        void offlineQueue.process();\n        state.lastHealthSuccess = null;\n        state.healthStatus = { state: 'idle' };\n        renderHealthStatus();\n        if (settingsSuccessEl) {\n          settingsSuccessEl.textContent = 'Settings updated.';\n        }\n        if (settingsErrorEl) {\n          settingsErrorEl.textContent = '';\n        }\n        toggleSettingsModal(false);\n      } catch (error) {\n        if (settingsErrorEl) {\n          settingsErrorEl.textContent = 'Failed to update server URL.';\n        }\n        console.error('Settings update failed', error);\n      }\n    });\n  }\n};\n\nconst initRequestHandlers = () => {\n  if (openRequestsBtn) {\n    openRequestsBtn.addEventListener('click', async () => {\n      if (!state.token) {\n        const authenticated = await ensureAuthenticated();\n        if (!authenticated) {\n          return;\n        }\n      }\n      await fetchRequests();\n      toggleRequestModal(true);\n    });\n  }\n\n  if (requestCancelBtn) {\n    requestCancelBtn.addEventListener('click', () => {\n      toggleRequestModal(false);\n    });\n  }\n\n  if (requestForm) {\n    requestForm.addEventListener('submit', async (event) => {\n      event.preventDefault();\n      await submitRequest();\n    });\n  }\n\n  if (refreshRequestsBtn) {\n    refreshRequestsBtn.addEventListener('click', () => {\n      void fetchRequests();\n    });\n  }\n};\n\nconst initTimesheetHandlers = () => {\n  ensureTimesheetFormDefaults();\n\n  if (openTimesheetBtn) {\n    openTimesheetBtn.addEventListener('click', async () => {\n      const authenticated = state.token ? true : await ensureAuthenticated();\n      if (!authenticated) {\n        return;\n      }\n      toggleTimesheetModal(true);\n    });\n  }\n\n  if (timesheetCloseBtn) {\n    timesheetCloseBtn.addEventListener('click', () => {\n      toggleTimesheetModal(false);\n    });\n  }\n\n  if (timesheetViewSelect) {\n    timesheetViewSelect.addEventListener('change', () => {\n      const view = timesheetViewSelect.value as TimesheetView;\n      updateTimesheetInputVisibility(view);\n      state.timesheetView = view;\n      state.timesheetReference = view === 'monthly'\n        ? timesheetMonthInput?.value?.trim() ?? null\n        : timesheetDateInput?.value?.trim() ?? null;\n    });\n  }\n\n  if (timesheetFilterForm) {\n    timesheetFilterForm.addEventListener('submit', async (event) => {\n      event.preventDefault();\n      const { view, date, month } = getTimesheetRequestValues();\n      await fetchTimesheet({ view, date: date ?? undefined, month: month ?? undefined });\n    });\n  }\n\n  if (timesheetRefreshBtn) {\n    timesheetRefreshBtn.addEventListener('click', async () => {\n      const { view, date, month } = getTimesheetRequestValues();\n      await fetchTimesheet({ view, date: date ?? undefined, month: month ?? undefined });\n    });\n  }\n\n  if (timesheetRequestsRefreshBtn) {\n    timesheetRequestsRefreshBtn.addEventListener('click', async () => {\n      const { view, date, month } = getTimesheetRequestValues();\n      await fetchTimesheet({ view, date: date ?? undefined, month: month ?? undefined, silent: true });\n    });\n  }\n\n  if (timesheetTableBody) {\n    timesheetTableBody.addEventListener('click', (event) => {\n      const target = event.target as HTMLElement | null;\n      if (!target || !target.matches('[data-action=\"timesheet-request-edit\"]')) {\n        return;\n      }\n      const date = target.getAttribute('data-date');\n      const label = target.getAttribute('data-label') ?? (date ? formatLocalDate(date) : 'Selected day');\n      if (date) {\n        openTimesheetEditRequest(date, label);\n      }\n    });\n  }\n\n  if (timesheetEditCancelBtn) {\n    timesheetEditCancelBtn.addEventListener('click', () => {\n      toggleTimesheetEditModal(false);\n    });\n  }\n\n  if (timesheetEditForm) {\n    timesheetEditForm.addEventListener('submit', async (event) => {\n      event.preventDefault();\n      if (!pendingTimesheetEdit || !state.timesheet) {\n        return;\n      }\n\n      const reason = timesheetEditReasonInput?.value.trim() ?? '';\n      if (!reason) {\n        if (timesheetEditErrorEl) {\n          timesheetEditErrorEl.textContent = 'Reason is required.';\n        }\n        if (timesheetEditSuccessEl) {\n          timesheetEditSuccessEl.textContent = '';\n        }\n        return;\n      }\n\n      const hoursValueRaw = timesheetEditHoursInput?.value.trim() ?? '';\n      let requestedMinutes: number | undefined;\n      if (hoursValueRaw) {\n        const parsed = Number.parseFloat(hoursValueRaw);\n        if (Number.isNaN(parsed) || parsed < 0) {\n          if (timesheetEditErrorEl) {\n            timesheetEditErrorEl.textContent = 'Hours must be zero or greater.';\n          }\n          if (timesheetEditSuccessEl) {\n            timesheetEditSuccessEl.textContent = '';\n          }\n          return;\n        }\n        if (parsed > 0) {\n          requestedMinutes = Math.round(parsed * 60);\n        }\n      }\n\n      if (timesheetEditErrorEl) {\n        timesheetEditErrorEl.textContent = '';\n      }\n      if (timesheetEditSuccessEl) {\n        timesheetEditSuccessEl.textContent = 'Submitting...';\n      }\n\n      const payload: Record<string, unknown> = {\n        view: state.timesheet.view,\n        rangeStart: state.timesheet.rangeStart,\n        targetDate: pendingTimesheetEdit.date,\n        reason\n      };\n      if (requestedMinutes && requestedMinutes > 0) {\n        payload.requestedMinutes = requestedMinutes;\n      }\n\n      const result = await sendOrQueue({\n        path: '/api/timesheets/edit-requests',\n        body: payload,\n        requiresAuth: true,\n        description: 'Submit Timesheet Edit'\n      });\n\n      if (result.ok) {\n        if (timesheetEditSuccessEl) {\n          timesheetEditSuccessEl.textContent = 'Edit request submitted.';\n        }\n        showToast('Edit request submitted', 'success');\n        toggleTimesheetEditModal(false);\n        await fetchTimesheet({\n          view: state.timesheet.view,\n          date: state.timesheet.view === 'monthly' ? undefined : state.timesheetReference ?? undefined,\n          month: state.timesheet.view === 'monthly' ? state.timesheetReference ?? undefined : undefined,\n          silent: true\n        });\n      } else if (result.queued) {\n        if (timesheetEditSuccessEl) {\n          timesheetEditSuccessEl.textContent = 'Offline: request queued and will submit automatically.';\n        }\n        toggleTimesheetEditModal(false);\n      } else {\n        const parsed = parseApiError(result.error);\n        if (timesheetEditErrorEl) {\n          timesheetEditErrorEl.textContent = parsed.message;\n        }\n        if (timesheetEditSuccessEl) {\n          timesheetEditSuccessEl.textContent = '';\n        }\n      }\n    });\n  }\n};\n\nconst initActionButtons = () => {\n  buttons.forEach((button) => {\n    const actionKey = button.dataset.action;\n    if (!actionKey) {\n      return;\n    }\n\n    button.addEventListener('click', async () => {\n      console.info('[ui]', {\n        event: 'button_click',\n        action: actionKey,\n        sessionId: state.sessionId,\n        tokenPresent: Boolean(state.token)\n      });\n      window.attendance.logAction(actionKey);\n      switch (actionKey) {\n        case 'log-in':\n          if (await ensureAuthenticated()) {\n            if (!state.sessionId) {\n              await startSession();\n            }\n          }\n          break;\n        case 'start-break':\n          await requireSessionAndSend('/api/events/break/start', 'Start Break');\n          break;\n        case 'end-break':\n          await requireSessionAndSend('/api/events/break/end', 'End Break');\n          break;\n        case 'start-lunch':\n          await requireSessionAndSend('/api/events/lunch/start', 'Start Lunch');\n          break;\n        case 'end-lunch':\n          await requireSessionAndSend('/api/events/lunch/end', 'End Lunch');\n          break;\n        case 'log-out':\n          await endSession();\n          break;\n        default:\n          console.warn(`Unknown action: ${actionKey}`);\n      }\n    });\n  });\n};\n\nconst bootstrap = async () => {\n  const bootstrapData = await window.attendance.getBootstrap();\n  state.bootstrap = bootstrapData;\n\n  const uiMode = bootstrapData.presenceUiMode;\n  if (uiMode === 'overlay' || uiMode === 'popup' || uiMode === 'both') {\n    presenceUiMode = uiMode;\n  } else {\n    presenceUiMode = 'both';\n  }\n\n  const settings = await window.attendance.getSettings();\n  state.settings = settings;\n  state.email = settings.workEmail ?? state.email;\n  if (loginEmailInput && state.email) {\n    loginEmailInput.value = state.email;\n  }\n\n  const baseUrl = settings.serverBaseUrl ?? bootstrapData.baseUrl;\n  bootstrapData.baseUrl = baseUrl;\n\n  apiClient = new ApiClient(baseUrl);\n  offlineQueue = new OfflineQueue(apiClient);\n  await offlineQueue.initialize();\n\n  window.addEventListener('online', () => {\n    void offlineQueue.process();\n    void fetchRequests();\n  });\n};\n\nconst init = async () => {\n  await bootstrap();\n  initActivityTracking();\n  initPresenceHandlers();\n  initSettingsHandlers();\n  initRequestHandlers();\n  initTimesheetHandlers();\n  initActionButtons();\n  updateStatus();\n  renderRequests();\n  void fetchSystemStatus();\n};\n\nexport const __test = {\n  resolvePresencePrompt,\n  shouldDisplayPresencePrompt,\n  showPresencePrompt,\n  confirmPresence,\n  acknowledgePresencePrompt,\n  getPresenceModal: () => presenceModal,\n  getPresenceConfirmButton: () => presenceConfirmBtn,\n  getState: () => state,\n  setSendOrQueueHandler,\n  resetSendOrQueueHandler,\n  setPresenceUiMode: (mode: PresenceUiMode) => {\n    presenceUiMode = mode;\n  }\n};\n\nvoid init();\n"],
  "mappings": "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",
  "names": ["state", "contentType"]
}
